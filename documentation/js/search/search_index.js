var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/classes/Accordion.html",[0,0.02,1,1.551]],["body/classes/Accordion.html",[0,0.031,1,2.944,2,0.304,3,0.251,4,0.2,5,2.322,6,0.482,7,2.045,8,1.226,9,1.722,10,1.088,11,0.304,12,1.074,13,3.868,14,2.582,15,3.374,16,0.753,17,1.369,18,2.045,19,0.959,20,1.863,21,2.476,22,1.737,23,0.635,24,3.891,25,1.2,26,0.043,27,0.661,28,0.739,29,1.2,30,2.837,31,2.837,32,1.665,33,2.837,34,1.703,35,0.86,36,0.419,37,0.251,38,1.643,39,1.358,40,2.322,41,2.322,42,1.358,43,0.028,44,0.028]],["title/components/AccordionComponent.html",[45,0.631,46,0.991]],["body/components/AccordionComponent.html",[0,0.022,1,2.68,2,0.225,3,0.186,4,0.148,6,0.357,8,1.037,11,0.225,12,0.867,16,0.608,17,1.158,19,0.774,23,0.528,25,0.968,26,0.043,27,0.708,28,0.555,29,0.968,35,0.807,36,0.464,37,0.186,38,1.08,43,0.023,44,0.023,45,1.115,46,1.533,47,1.132,48,1.132,49,1.132,50,1.722,51,3.757,52,1.007,53,2.831,54,2.519,55,1.69,56,3.14,57,1.69,58,3.14,59,2.898,60,4.166,61,3.14,62,2.103,63,4.458,64,2.103,65,3.757,66,2.103,67,2.57,68,2.57,69,2.57,70,3.14,71,3.14,72,3.14,73,2.57,74,3.48,75,3.14,76,1.666,77,2.103,78,3.757,79,3.757,80,3.075,81,2.57,82,4.458,83,2.103,84,3.14,85,2.103,86,3.14,87,3.14,88,1.282,89,0.649,90,1.722,91,2.103,92,1.722,93,2.103,94,2.103,95,2.103,96,2.103,97,3.14,98,2.103,99,2.103,100,1.132,101,2.103,102,2.103,103,2.103,104,1.47,105,2.103,106,1.722,107,1.722,108,2.103,109,2.103,110,1.722,111,0.9,112,1.69,113,1.503,114,1.69,115,2.242,116,1.132,117,1.132,118,0.723,119,1.132,120,0.723,121,1.132,122,0.807,123,1.132,124,0.807,125,1.503,126,1.132,127,0.723,128,1.132,129,0.807,130,1.132,131,0.807,132,1.007,133,1.132,134,1.132]],["title/injectables/ApiService.html",[135,1.38,136,1.551]],["body/injectables/ApiService.html",[0,0.019,1,1.816,2,0.189,3,0.156,4,0.125,6,0.3,8,0.488,10,0.677,11,0.189,16,0.532,17,1.635,19,0.677,23,0.578,25,0.847,26,0.043,27,0.467,28,0.406,29,0.847,35,1.089,36,0.775,37,0.156,38,0.945,43,0.02,44,0.02,88,1.077,89,0.545,110,1.446,135,1.615,136,1.816,137,1.234,138,4.842,139,3.115,140,1.921,141,3.807,142,3.807,143,3.807,144,3.807,145,3.807,146,3.374,147,3.374,148,1.766,149,4.124,150,1.766,151,3.374,152,1.766,153,4.95,154,3.932,155,1.766,156,2.056,157,1.766,158,1.615,159,1.766,160,2.056,161,1.766,162,2.056,163,1.766,164,4.124,165,1.766,166,3.374,167,4.124,168,3.374,169,1.234,170,1.766,171,1.446,172,1.766,173,1.766,174,1.766,175,1.766,176,1.766,177,1.766,178,1.766,179,1.766,180,1.766,181,1.766,182,1.766,183,1.446,184,1.446,185,1.446,186,1.234,187,1.446,188,4.124,189,1.766,190,4.124,191,4.124,192,1.766,193,1.975,194,1.766,195,1.766,196,1.766,197,1.766,198,1.766,199,4.124,200,1.766,201,1.766,202,1.766,203,1.766,204,1.766,205,1.766,206,1.766,207,1.766,208,1.766,209,1.766,210,1.766,211,1.766,212,1.766,213,1.766,214,1.766,215,1.766,216,1.766,217,1.766,218,1.766,219,1.766,220,1.766,221,1.766,222,1.766,223,1.766,224,1.766,225,2.748,226,1.766,227,1.766,228,1.766,229,2.748,230,1.766,231,1.766,232,1.766,233,1.766,234,1.766,235,2.748,236,2.249,237,2.249,238,1.766,239,1.766,240,1.766,241,1.766,242,1.766,243,1.766,244,1.766]],["title/components/AppComponent.html",[45,0.631,118,0.991]],["body/components/AppComponent.html",[0,0.021,2,0.332,3,0.274,4,0.219,6,0.526,11,0.332,12,1.14,22,1.432,23,0.393,26,0.042,27,0.702,28,0.458,36,0.458,37,0.274,43,0.03,44,0.03,45,1.186,46,1.065,47,1.667,48,1.667,49,1.667,52,1.483,53,3.054,54,2.752,55,2.222,57,2.222,59,1.667,76,1.065,89,0.955,100,1.667,111,1.326,112,2.222,113,1.977,114,2.222,115,2.666,116,1.667,117,1.667,118,1.704,119,1.667,120,1.065,121,1.667,122,1.188,123,1.667,124,1.188,125,2.372,126,1.667,127,1.065,128,1.667,129,1.188,130,1.667,131,1.188,132,1.483,133,1.667,134,1.667,245,2.535,246,3.379,247,4.129,248,4.129,249,4.054,250,1.888,251,3.098]],["title/modules/AppModule.html",[252,1.551,253,1.757]],["body/modules/AppModule.html",[0,0.022,2,0.235,3,0.194,4,0.155,7,0.94,26,0.043,36,0.847,37,0.286,43,0.023,44,0.023,46,1.634,76,1.634,89,0.678,90,1.798,111,0.94,118,1.849,120,1.634,122,1.822,124,1.822,125,1.846,127,1.634,129,1.822,131,1.822,132,1.052,136,2.557,154,1.536,171,1.798,252,2.075,253,3.557,254,1.339,255,3.155,256,2.075,257,3.155,258,1.798,259,1.798,260,1.798,261,1.798,262,2.557,263,2.557,264,2.655,265,1.798,266,1.536,267,2.197,268,3.243,269,1.798,270,1.339,271,3.243,272,3.243,273,2.267,274,1.798,275,1.798,276,2.197,277,1.798,278,2.197,279,2.197,280,1.798,281,2.197,282,3.243,283,3.243,284,1.798,285,2.197,286,2.197,287,1.798,288,2.197,289,3.243,290,1.798,291,1.798,292,2.197,293,1.798,294,1.798,295,1.798,296,2.197,297,2.197,298,2.197,299,2.197,300,1.798,301,1.798,302,2.197,303,2.197,304,2.197,305,3.243,306,2.197,307,2.197,308,2.197,309,2.197]],["title/classes/AppPage.html",[0,0.02,310,2.015]],["body/classes/AppPage.html",[0,0.033,2,0.421,3,0.348,4,0.278,11,0.421,16,0.932,23,0.61,26,0.042,35,1.048,36,0.581,37,0.348,43,0.035,44,0.035,113,1.884,246,3.221,270,2.398,310,3.362,311,3.221,312,5.414,313,5.414,314,3.935,315,3.935,316,3.221,317,3.935,318,3.935,319,3.935]],["title/classes/Brand.html",[0,0.02,156,1.757]],["body/classes/Brand.html",[0,0.031,2,0.304,3,0.251,4,0.2,6,0.482,7,2.045,8,1.226,9,1.722,10,1.088,11,0.304,12,1.074,14,2.582,16,0.753,17,1.369,18,2.045,19,0.959,20,1.863,21,2.476,22,1.737,23,0.635,25,1.2,26,0.043,27,0.957,28,0.739,29,1.2,32,1.665,34,1.703,35,0.86,36,0.419,37,0.251,38,1.643,39,1.358,42,1.358,43,0.028,44,0.028,156,3.335,320,2.322,321,5.535,322,3.891,323,2.837,324,2.837,325,2.837,326,1.983,327,2.837]],["title/classes/Color.html",[0,0.02,158,1.38]],["body/classes/Color.html",[0,0.029,2,0.272,3,0.225,4,0.179,6,0.432,7,1.95,8,1.156,9,1.654,10,0.975,11,0.272,12,0.995,14,2.513,16,0.698,17,1.291,18,1.95,19,0.888,20,1.726,21,2.392,22,1.768,23,0.651,25,1.112,26,0.043,27,0.939,28,0.759,29,1.112,32,1.543,34,1.606,35,0.811,36,0.376,37,0.225,38,1.718,39,1.218,42,1.218,43,0.026,44,0.026,158,2.556,326,1.777,328,2.082,329,3.783,330,5.413,331,5.413,332,3.491,333,3.605,334,2.543,335,2.543,336,2.543,337,2.543,338,2.543,339,2.543,340,2.543,341,2.543]],["title/interfaces/Deserializable.html",[9,0.991,342,1.38]],["body/interfaces/Deserializable.html",[2,0.445,3,0.367,4,0.293,9,1.711,11,0.445,16,0.963,18,2.128,23,0.527,25,1.282,26,0.041,27,0.706,28,0.614,29,1.282,32,2.128,34,1.594,35,0.805,37,0.367,43,0.036,44,0.036,342,2.381,343,3.402,344,4.157,345,4.974]],["title/components/FooterComponent.html",[45,0.631,120,0.991]],["body/components/FooterComponent.html",[0,0.022,2,0.225,3,0.186,4,0.148,6,0.357,8,1.037,11,0.225,12,0.867,16,0.608,19,1.026,23,0.398,26,0.043,27,0.708,35,0.608,36,0.311,37,0.186,43,0.023,44,0.023,45,1.061,46,1.08,47,1.132,48,1.132,49,1.132,52,1.007,53,2.831,54,2.519,55,1.69,57,1.69,59,1.132,67,2.57,68,2.57,69,2.57,73,2.57,74,2.912,76,0.723,88,2.539,89,0.649,111,0.9,112,1.69,113,1.503,114,2.242,115,2.242,116,1.132,117,1.132,118,0.723,119,1.132,120,1.433,121,1.132,122,0.807,123,1.132,124,0.807,125,1.503,126,1.132,127,0.723,128,1.132,129,0.807,130,1.132,131,0.807,132,1.007,133,1.132,134,1.132,139,2.57,193,1.503,256,1.69,346,1.722,347,4.166,348,3.14,349,3.14,350,3.41,351,2.103,352,2.103,353,3.14,354,3.14,355,3.14,356,3.14,357,3.14,358,3.14,359,3.14,360,3.14,361,2.57,362,3.14,363,3.41,364,3.14,365,4.166,366,4.166,367,3.14,368,3.14,369,3.14,370,3.14,371,2.57,372,3.14,373,3.14,374,3.14,375,3.14,376,2.194,377,3.14,378,2.57,379,2.194,380,3.14,381,3.14,382,3.14,383,3.14,384,3.14,385,3.14,386,3.14,387,2.57,388,3.14,389,3.14,390,3.14,391,3.14,392,3.14,393,3.14,394,3.14,395,3.14,396,4.166,397,3.14,398,3.14,399,3.14,400,3.14,401,3.14,402,3.14,403,3.14,404,3.14,405,3.14,406,3.14]],["title/pipes/ImageFilterPipe.html",[262,1.551,407,1.757]],["body/pipes/ImageFilterPipe.html",[0,0.032,2,0.329,3,0.271,4,0.217,6,0.522,8,1.134,16,0.595,17,1.267,22,1.523,23,0.39,25,1.267,26,0.043,27,0.786,28,0.454,29,0.948,35,0.996,36,0.454,37,0.271,38,1.413,43,0.035,44,0.029,52,1.472,89,0.948,158,2.589,185,2.516,262,2.658,332,3.233,407,2.82,408,3.362,409,2.516,410,4.108,411,4.938,412,4.108,413,4.626,414,4.108,415,3.074,416,5.493,417,4.626,418,3.074,419,3.074,420,3.074,421,3.074]],["title/classes/Language.html",[0,0.02,422,1.757]],["body/classes/Language.html",[0,0.031,2,0.304,3,0.251,4,0.2,6,0.482,7,2.045,8,1.226,9,1.722,10,1.088,11,0.304,12,1.074,14,2.582,16,0.753,17,1.369,18,2.045,19,0.959,20,1.863,21,2.476,22,1.737,23,0.635,25,1.2,26,0.043,27,0.957,28,0.739,29,1.2,32,1.665,34,1.703,35,0.86,36,0.419,37,0.251,38,1.643,39,1.358,42,1.358,43,0.028,44,0.028,326,1.983,422,3.335,423,2.322,424,5.535,425,3.891,426,2.837,427,2.837,428,2.837,429,2.837]],["title/injectables/LanguageService.html",[135,1.38,263,1.551]],["body/injectables/LanguageService.html",[0,0.026,2,0.295,3,0.244,4,0.195,6,0.469,10,1.057,11,0.295,12,1.053,16,0.739,17,1.349,19,1.163,23,0.65,26,0.043,28,0.697,35,0.847,36,0.563,37,0.244,43,0.027,44,0.027,89,0.85,100,2.541,135,2.095,140,2.666,193,2.454,250,2.877,263,2.354,332,3.8,422,3.5,430,2.257,431,5.126,432,4.721,433,5.126,434,5.126,435,4.721,436,2.758,437,2.758,438,3.815,439,3.815,440,3.815,441,2.758,442,3.815,443,3.815,444,3.815,445,2.758,446,3.815,447,3.815,448,2.758,449,3.815,450,3.815,451,2.758,452,2.758,453,2.758]],["title/components/MainComponent.html",[45,0.631,127,0.991]],["body/components/MainComponent.html",[0,0.02,2,0.309,3,0.255,4,0.204,6,0.49,8,1.086,11,0.309,13,2.751,16,0.762,19,1.186,23,0.499,26,0.043,27,0.669,35,0.762,36,0.426,37,0.255,43,0.028,44,0.028,45,1.203,46,0.992,47,1.553,48,1.553,49,1.553,52,1.382,53,3.017,54,2.684,55,2.118,57,2.118,59,1.553,74,3.363,76,0.992,88,2.731,89,0.89,111,1.235,112,2.118,113,1.885,114,2.118,115,2.59,116,1.553,117,1.553,118,0.992,119,1.553,120,0.992,121,1.553,122,1.107,123,1.553,124,1.107,125,2.489,126,1.553,127,1.655,128,1.553,129,1.107,130,1.553,131,1.107,132,1.382,133,1.553,134,1.553,350,3.938,454,2.362,455,3.936,456,3.936,457,3.936,458,2.886,459,2.886,460,3.936,461,3.936]],["title/components/PanelComponent.html",[45,0.631,76,0.991]],["body/components/PanelComponent.html",[0,0.025,2,0.276,3,0.228,4,0.182,6,0.438,11,0.276,19,1.129,22,1.301,23,0.581,26,0.043,27,0.618,28,0.623,34,1.854,36,0.381,37,0.228,43,0.026,44,0.026,45,1.129,46,0.886,47,1.387,48,1.387,49,1.387,52,1.234,53,2.955,54,2.629,55,1.958,57,1.958,59,2.955,76,1.663,80,3.452,81,2.978,89,0.795,92,3.452,100,1.387,104,2.543,111,1.103,112,1.958,113,1.742,114,1.958,115,2.467,116,1.387,117,1.387,118,0.886,119,1.387,120,0.886,121,1.387,122,0.988,123,1.387,124,0.988,125,1.742,126,1.387,127,0.886,128,1.387,129,0.988,130,1.387,131,0.988,132,1.234,133,1.387,134,1.387,193,1.234,249,4.22,250,1.571,462,2.109,463,3.639,464,3.639,465,4.583,466,4.834,467,3.639,468,4.218,469,2.577,470,2.577,471,3.639,472,2.109,473,4.834]],["title/classes/Qbox.html",[0,0.02,160,1.757]],["body/classes/Qbox.html",[0,0.028,2,0.259,3,0.214,4,0.171,6,0.411,7,1.906,8,1.124,9,1.623,10,0.927,11,0.259,12,0.96,13,3.742,14,2.48,15,3.264,16,0.673,17,1.256,18,1.906,19,0.857,20,1.665,21,2.623,22,1.792,23,0.657,25,1.072,26,0.043,27,0.591,28,0.765,29,1.072,32,1.488,34,1.562,35,0.789,36,0.357,37,0.214,38,1.741,39,1.158,40,1.979,41,1.979,42,1.158,43,0.025,44,0.025,158,1.665,160,3.085,474,1.979,475,5.354,476,5.354,477,5.354,478,3.478,479,2.418,480,2.418,481,2.418,482,2.418,483,2.418,484,2.418,485,2.418,486,2.418,487,2.418]],["title/classes/Tech.html",[0,0.02,162,1.757]],["body/classes/Tech.html",[0,0.028,2,0.261,3,0.216,4,0.172,6,0.415,7,1.915,8,1.131,9,1.629,10,0.937,11,0.261,12,0.967,14,2.487,15,2.497,16,0.678,17,1.263,18,1.915,19,0.863,20,1.678,21,2.36,22,1.692,23,0.644,25,1.08,26,0.043,27,0.595,28,0.818,29,1.263,32,1.499,34,1.571,35,0.793,36,0.517,37,0.216,38,1.695,39,1.17,42,1.17,43,0.025,44,0.025,162,3.271,329,2.862,488,2,489,5.367,490,5.367,491,5.367,492,5.367,493,3.271,494,3.504,495,2.443,496,2.443,497,4.93,498,2.443,499,2.443,500,2.443,501,2.443,502,2.443,503,2.443,504,2.443]],["title/interfaces/TechOption.html",[342,1.38,493,1.757]],["body/interfaces/TechOption.html",[2,0.427,3,0.352,4,0.281,6,0.678,11,0.427,12,1.339,15,3.315,22,1.748,23,0.615,26,0.041,28,0.716,37,0.352,43,0.035,44,0.035,329,3.801,342,2.503,493,3.186,505,4.279,506,3.264,507,3.988,508,3.988]],["title/coverage.html",[509,3.219]],["body/coverage.html",[0,0.036,1,1.488,4,0.195,5,2.262,9,0.951,26,0.043,28,0.408,43,0.027,44,0.027,45,1.192,46,0.951,50,2.262,76,0.951,118,0.951,120,0.951,122,1.06,124,1.06,127,0.951,129,1.06,131,1.06,135,1.83,136,1.488,137,2.671,156,1.685,158,1.323,160,1.685,162,1.685,169,2.671,186,1.932,193,1.323,245,2.262,262,1.488,263,1.488,280,2.262,287,2.262,295,2.262,310,1.932,311,2.262,320,2.262,328,2.262,342,1.83,343,2.262,346,2.262,387,2.262,407,1.685,408,2.262,409,2.262,422,1.685,423,2.262,430,2.262,454,2.262,462,2.262,474,2.262,488,2.262,493,1.685,505,2.262,506,2.262,509,2.262,510,2.764,511,2.764,512,5.13,513,2.764,514,3.821,515,3.821,516,2.764,517,2.764,518,2.764,519,4.38,520,3.821,521,2.764,522,2.764,523,3.821,524,2.764,525,2.764,526,2.764,527,2.764,528,2.764,529,2.764,530,2.764,531,2.764,532,2.764,533,2.764,534,4.725,535,4.38,536,3.821,537,3.821,538,2.764,539,2.764,540,4.38,541,3.821,542,2.764,543,3.466,544,2.764,545,2.764,546,2.764,547,2.262,548,4.725,549,2.262,550,3.128,551,2.262,552,2.262,553,2.764,554,2.764]],["title/dependencies.html",[254,2.113,555,2.408]],["body/dependencies.html",[26,0.043,43,0.03,44,0.03,89,0.963,140,2.182,154,2.182,237,2.556,254,1.903,256,1.68,269,3.397,270,2.53,273,2.901,274,2.556,275,2.556,277,2.556,284,2.556,290,2.556,291,3.397,293,3.397,294,2.556,300,3.397,301,2.556,376,2.182,379,2.182,472,2.556,556,3.123,557,5.58,558,3.123,559,3.123,560,3.123,561,3.123,562,3.123,563,3.123,564,3.123,565,3.123,566,3.123,567,3.123,568,3.123,569,3.123,570,3.123,571,4.151,572,3.123,573,3.123,574,2.556,575,3.123,576,4.151,577,3.123,578,3.123,579,3.123,580,3.123,581,3.123,582,3.123,583,3.123,584,3.123,585,3.123,586,3.123,587,3.123,588,3.123,589,3.123,590,3.123,591,3.123,592,3.123,593,2.556,594,3.123,595,3.123,596,3.123,597,3.123,598,3.123,599,3.123,600,3.123,601,3.123,602,3.123,603,3.123,604,3.123,605,3.123,606,3.123,607,3.123]],["title/index.html",[11,0.258,608,2.408,609,2.408]],["body/index.html",[3,0.282,4,0.225,26,0.03,27,0.542,43,0.03,44,0.03,45,1.032,54,2.016,107,2.611,193,1.527,236,2.611,256,1.717,266,2.229,273,3.813,316,2.611,361,2.611,371,2.611,376,3.502,378,2.611,379,2.942,574,2.611,593,3.446,610,3.19,611,4.21,612,5.012,613,4.713,614,3.19,615,3.19,616,3.19,617,3.19,618,3.19,619,4.21,620,5.658,621,3.19,622,4.21,623,2.611,624,3.19,625,3.19,626,3.19,627,4.713,628,3.19,629,5.351,630,3.19,631,3.19,632,4.21,633,3.19,634,4.21,635,3.19,636,3.446,637,4.21,638,5.21,639,4.21,640,4.21,641,3.19,642,5.012,643,3.19,644,3.19,645,3.19,646,3.19,647,4.713,648,3.19,649,3.19,650,3.19,651,3.19,652,3.19,653,3.19]],["title/modules.html",[252,2.117]],["body/modules.html",[26,0.038,43,0.038,44,0.038,252,2.444,253,2.768,270,2.768,654,4.541,655,4.541,656,4.541]],["title/overview.html",[657,3.219]],["body/overview.html",[0,0.023,26,0.042,37,0.288,43,0.031,44,0.031,45,0.714,46,1.638,76,1.638,111,1.395,118,1.887,120,1.638,122,1.826,124,1.826,127,1.638,129,1.826,131,1.826,135,1.561,136,2.564,252,2.299,253,3.651,254,1.987,255,2.669,256,1.755,257,2.669,258,2.669,259,2.669,260,2.669,261,2.669,262,2.564,263,2.564,264,3.496,265,2.669,266,2.279,342,1.561,363,3.496,407,1.987,657,2.669,658,4.271,659,3.261,660,3.261]],["title/miscellaneous/variables.html",[543,2.423,661,1.971]],["body/miscellaneous/variables.html",[11,0.394,26,0.042,28,0.745,43,0.033,44,0.033,100,2.845,104,2.57,106,3.776,137,2.57,169,3.883,183,3.01,184,3.01,186,3.523,187,3.01,250,3.222,543,2.57,547,3.01,549,3.01,550,3.01,551,4.126,552,4.126,623,3.01,636,3.776,661,3.01,662,3.677,663,4.614,664,3.677,665,3.677,666,3.677,667,3.677,668,5.287,669,4.614,670,3.677]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Brand.html":{},"classes/Color.html":{},"interfaces/Deserializable.html":{},"components/FooterComponent.html":{},"pipes/ImageFilterPipe.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"classes/Qbox.html":{},"classes/Tech.html":{},"interfaces/TechOption.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["0.1.3",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["0.11.1",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["0.30.1",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["0.8.19",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":658,"title":{},"body":{"overview.html":{}}}],["1.0.3",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["1.0.8",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["1.18.2",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":587,"title":{},"body":{"dependencies.html":{}}}],["1.3mb",{"_index":653,"title":{},"body":{"index.html":{}}}],["1.4.3",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["1.7.3",{"_index":615,"title":{},"body":{"index.html":{}}}],["1.9.0",{"_index":586,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":517,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["13/27",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":363,"title":{},"body":{"components/FooterComponent.html":{},"overview.html":{}}}],["2.2.0",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["2.5.3",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":404,"title":{},"body":{"components/FooterComponent.html":{}}}],["22",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":377,"title":{},"body":{"components/FooterComponent.html":{}}}],["3.1.8",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["3.6.1",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":378,"title":{},"body":{"components/FooterComponent.html":{},"index.html":{}}}],["4.1.0",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["4.16.3",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["48",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":617,"title":{},"body":{"index.html":{}}}],["5.2.0",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["5.2.10",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["5.5.6",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["5.9.1",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":525,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":660,"title":{},"body":{"overview.html":{}}}],["7/10",{"_index":529,"title":{},"body":{"coverage.html":{}}}],["7/12",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":528,"title":{},"body":{"coverage.html":{}}}],["8/12",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":659,"title":{},"body":{"overview.html":{}}}],["accordingli",{"_index":230,"title":{},"body":{"injectables/ApiService.html":{}}}],["accordion",{"_index":1,"title":{"classes/Accordion.html":{}},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"coverage.html":{}}}],["accordion'},{'nam",{"_index":117,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["accordion(accordion.id",{"_index":222,"title":{},"body":{"injectables/ApiService.html":{}}}],["accordion.component.html",{"_index":58,"title":{},"body":{"components/AccordionComponent.html":{}}}],["accordion.component.scss",{"_index":56,"title":{},"body":{"components/AccordionComponent.html":{}}}],["accordion.head",{"_index":223,"title":{},"body":{"injectables/ApiService.html":{}}}],["accordion.text",{"_index":224,"title":{},"body":{"injectables/ApiService.html":{}}}],["accordion/accordion.compon",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["accordioncompon",{"_index":46,"title":{"components/AccordionComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["actual_compon",{"_index":134,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["address",{"_index":393,"title":{},"body":{"components/FooterComponent.html":{}}}],["afterconteninit",{"_index":91,"title":{},"body":{"components/AccordionComponent.html":{}}}],["aftercontentinit",{"_index":51,"title":{},"body":{"components/AccordionComponent.html":{}}}],["angular",{"_index":376,"title":{},"body":{"components/FooterComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":171,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{}}}],["angular/compil",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":89,"title":{},"body":{"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"pipes/ImageFilterPipe.html":{},"injectables/LanguageService.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["angular/languag",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular2",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["angular4",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["angularj",{"_index":375,"title":{},"body":{"components/FooterComponent.html":{}}}],["anim",{"_index":329,"title":{},"body":{"classes/Color.html":{},"classes/Tech.html":{},"interfaces/TechOption.html":{}}}],["animate.css",{"_index":574,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["api",{"_index":183,"title":{},"body":{"injectables/ApiService.html":{},"miscellaneous/variables.html":{}}}],["api/accordion",{"_index":220,"title":{},"body":{"injectables/ApiService.html":{}}}],["api/brand",{"_index":207,"title":{},"body":{"injectables/ApiService.html":{}}}],["api/color",{"_index":200,"title":{},"body":{"injectables/ApiService.html":{}}}],["api/qbox",{"_index":212,"title":{},"body":{"injectables/ApiService.html":{}}}],["api/tech",{"_index":189,"title":{},"body":{"injectables/ApiService.html":{}}}],["api_url",{"_index":186,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiservic",{"_index":136,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["apiurl",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":54,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"index.html":{}}}],["app.compon",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":248,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":247,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":118,"title":{"components/AppComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodul",{"_index":253,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppag",{"_index":310,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["array",{"_index":332,"title":{},"body":{"classes/Color.html":{},"pipes/ImageFilterPipe.html":{},"injectables/LanguageService.html":{}}}],["artifact",{"_index":630,"title":{},"body":{"index.html":{}}}],["author",{"_index":475,"title":{},"body":{"classes/Qbox.html":{}}}],["automat",{"_index":624,"title":{},"body":{"index.html":{}}}],["backend",{"_index":233,"title":{},"body":{"injectables/ApiService.html":{}}}],["bitbucket",{"_index":385,"title":{},"body":{"components/FooterComponent.html":{}}}],["bodi",{"_index":237,"title":{},"body":{"injectables/ApiService.html":{},"dependencies.html":{}}}],["body'},{'nam",{"_index":126,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["body.compon",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["body.component.t",{"_index":524,"title":{},"body":{"coverage.html":{}}}],["body/main",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["boolean",{"_index":468,"title":{},"body":{"components/PanelComponent.html":{}}}],["boostrapp",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"components/FooterComponent.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bound",{"_index":353,"title":{},"body":{"components/FooterComponent.html":{}}}],["brand",{"_index":156,"title":{"classes/Brand.html":{}},"body":{"injectables/ApiService.html":{},"classes/Brand.html":{},"coverage.html":{}}}],["brand(brand.id",{"_index":209,"title":{},"body":{"injectables/ApiService.html":{}}}],["brand.nam",{"_index":210,"title":{},"body":{"injectables/ApiService.html":{}}}],["brand.src",{"_index":211,"title":{},"body":{"injectables/ApiService.html":{}}}],["brows",{"_index":656,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":317,"title":{},"body":{"classes/AppPage.html":{}}}],["browsermodul",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":629,"title":{},"body":{"index.html":{}}}],["call",{"_index":69,"title":{},"body":{"components/AccordionComponent.html":{},"components/FooterComponent.html":{}}}],["carousel",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["catch(this.handleerror",{"_index":199,"title":{},"body":{"injectables/ApiService.html":{}}}],["cdref",{"_index":65,"title":{},"body":{"components/AccordionComponent.html":{}}}],["chang",{"_index":107,"title":{},"body":{"components/AccordionComponent.html":{},"index.html":{}}}],["changedetectorref",{"_index":63,"title":{},"body":{"components/AccordionComponent.html":{}}}],["check",{"_index":649,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/Accordion.html":{},"classes/AppPage.html":{},"classes/Brand.html":{},"classes/Color.html":{},"classes/Language.html":{},"classes/Qbox.html":{},"classes/Tech.html":{}},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Brand.html":{},"classes/Color.html":{},"components/FooterComponent.html":{},"pipes/ImageFilterPipe.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"classes/Qbox.html":{},"classes/Tech.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":613,"title":{},"body":{"index.html":{}}}],["client",{"_index":151,"title":{},"body":{"injectables/ApiService.html":{}}}],["clue",{"_index":239,"title":{},"body":{"injectables/ApiService.html":{}}}],["cluster_appmodul",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":236,"title":{},"body":{"injectables/ApiService.html":{},"index.html":{}}}],["color",{"_index":158,"title":{"classes/Color.html":{}},"body":{"injectables/ApiService.html":{},"classes/Color.html":{},"pipes/ImageFilterPipe.html":{},"classes/Qbox.html":{},"coverage.html":{}}}],["color(color.id",{"_index":202,"title":{},"body":{"injectables/ApiService.html":{}}}],["color.anim",{"_index":206,"title":{},"body":{"injectables/ApiService.html":{}}}],["color.condit",{"_index":204,"title":{},"body":{"injectables/ApiService.html":{}}}],["color.imagesrc",{"_index":205,"title":{},"body":{"injectables/ApiService.html":{}}}],["color.nam",{"_index":203,"title":{},"body":{"injectables/ApiService.html":{}}}],["compon",{"_index":45,"title":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":116,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["condit",{"_index":330,"title":{},"body":{"classes/Color.html":{}}}],["console.error('an",{"_index":231,"title":{},"body":{"injectables/ApiService.html":{}}}],["console.error(`backend",{"_index":242,"title":{},"body":{"injectables/ApiService.html":{}}}],["const",{"_index":185,"title":{},"body":{"injectables/ApiService.html":{},"pipes/ImageFilterPipe.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"classes/Brand.html":{},"classes/Color.html":{},"components/FooterComponent.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"classes/Qbox.html":{},"classes/Tech.html":{}}}],["constructor(cdref",{"_index":62,"title":{},"body":{"components/AccordionComponent.html":{}}}],["constructor(http",{"_index":148,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(id",{"_index":20,"title":{},"body":{"classes/Accordion.html":{},"classes/Brand.html":{},"classes/Color.html":{},"classes/Language.html":{},"classes/Qbox.html":{},"classes/Tech.html":{}}}],["constructor(priv",{"_index":110,"title":{},"body":{"components/AccordionComponent.html":{},"injectables/ApiService.html":{}}}],["contain",{"_index":238,"title":{},"body":{"injectables/ApiService.html":{}}}],["content",{"_index":71,"title":{},"body":{"components/AccordionComponent.html":{}}}],["content'},{'nam",{"_index":133,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["content.compon",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["content.component.t",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["content/middl",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["contentchildren",{"_index":84,"title":{},"body":{"components/AccordionComponent.html":{}}}],["contentchildren(panelcompon",{"_index":93,"title":{},"body":{"components/AccordionComponent.html":{}}}],["context",{"_index":551,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cooki",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["copyright",{"_index":403,"title":{},"body":{"components/FooterComponent.html":{}}}],["core",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":509,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["css3",{"_index":374,"title":{},"body":{"components/FooterComponent.html":{}}}],["current",{"_index":79,"title":{},"body":{"components/AccordionComponent.html":{}}}],["data",{"_index":139,"title":{},"body":{"injectables/ApiService.html":{},"components/FooterComponent.html":{}}}],["databas",{"_index":389,"title":{},"body":{"components/FooterComponent.html":{}}}],["declar",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decor",{"_index":83,"title":{},"body":{"components/AccordionComponent.html":{}}}],["default",{"_index":100,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"injectables/LanguageService.html":{},"components/PanelComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":23,"title":{},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/Brand.html":{},"classes/Color.html":{},"interfaces/Deserializable.html":{},"components/FooterComponent.html":{},"pipes/ImageFilterPipe.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"classes/Qbox.html":{},"classes/Tech.html":{},"interfaces/TechOption.html":{}}}],["depend",{"_index":254,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":6,"title":{},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/Brand.html":{},"classes/Color.html":{},"components/FooterComponent.html":{},"pipes/ImageFilterPipe.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"classes/Qbox.html":{},"classes/Tech.html":{},"interfaces/TechOption.html":{}}}],["deseri",{"_index":18,"title":{},"body":{"classes/Accordion.html":{},"classes/Brand.html":{},"classes/Color.html":{},"interfaces/Deserializable.html":{},"classes/Language.html":{},"classes/Qbox.html":{},"classes/Tech.html":{}}}],["deserializ",{"_index":9,"title":{"interfaces/Deserializable.html":{}},"body":{"classes/Accordion.html":{},"classes/Brand.html":{},"classes/Color.html":{},"interfaces/Deserializable.html":{},"classes/Language.html":{},"classes/Qbox.html":{},"classes/Tech.html":{},"coverage.html":{}}}],["deserialize(input",{"_index":32,"title":{},"body":{"classes/Accordion.html":{},"classes/Brand.html":{},"classes/Color.html":{},"interfaces/Deserializable.html":{},"classes/Language.html":{},"classes/Qbox.html":{},"classes/Tech.html":{}}}],["detector",{"_index":108,"title":{},"body":{"components/AccordionComponent.html":{}}}],["dev",{"_index":621,"title":{},"body":{"index.html":{}}}],["develop",{"_index":361,"title":{},"body":{"components/FooterComponent.html":{},"index.html":{}}}],["differ",{"_index":368,"title":{},"body":{"components/FooterComponent.html":{}}}],["direct",{"_index":114,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["directive'",{"_index":70,"title":{},"body":{"components/AccordionComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":628,"title":{},"body":{"index.html":{}}}],["directori",{"_index":633,"title":{},"body":{"index.html":{}}}],["dist",{"_index":632,"title":{},"body":{"index.html":{}}}],["django",{"_index":381,"title":{},"body":{"components/FooterComponent.html":{}}}],["document",{"_index":387,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["dom",{"_index":48,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["dynam",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":643,"title":{},"body":{"index.html":{}}}],["e2e/app.po.t",{"_index":311,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/app.po.ts:4",{"_index":315,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/app.po.ts:8",{"_index":314,"title":{},"body":{"classes/AppPage.html":{}}}],["edit_loc",{"_index":392,"title":{},"body":{"components/FooterComponent.html":{}}}],["element",{"_index":113,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["element(by.css('app",{"_index":318,"title":{},"body":{"classes/AppPage.html":{}}}],["email",{"_index":396,"title":{},"body":{"components/FooterComponent.html":{}}}],["end",{"_index":642,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":184,"title":{},"body":{"injectables/ApiService.html":{},"miscellaneous/variables.html":{}}}],["eng",{"_index":440,"title":{},"body":{"injectables/LanguageService.html":{}}}],["english",{"_index":431,"title":{},"body":{"injectables/LanguageService.html":{}}}],["environ",{"_index":169,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":187,"title":{},"body":{"injectables/ApiService.html":{},"miscellaneous/variables.html":{}}}],["environments/environ",{"_index":170,"title":{},"body":{"injectables/ApiService.html":{}}}],["err",{"_index":168,"title":{},"body":{"injectables/ApiService.html":{}}}],["err.error",{"_index":225,"title":{},"body":{"injectables/ApiService.html":{}}}],["err.error.messag",{"_index":232,"title":{},"body":{"injectables/ApiService.html":{}}}],["err.statu",{"_index":243,"title":{},"body":{"injectables/ApiService.html":{}}}],["error",{"_index":167,"title":{},"body":{"injectables/ApiService.html":{}}}],["event",{"_index":472,"title":{},"body":{"components/PanelComponent.html":{},"dependencies.html":{}}}],["eventemitt",{"_index":473,"title":{},"body":{"components/PanelComponent.html":{}}}],["exampl",{"_index":10,"title":{},"body":{"classes/Accordion.html":{},"injectables/ApiService.html":{},"classes/Brand.html":{},"classes/Color.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Qbox.html":{},"classes/Tech.html":{}}}],["execut",{"_index":639,"title":{},"body":{"index.html":{}}}],["experienc",{"_index":357,"title":{},"body":{"components/FooterComponent.html":{}}}],["export",{"_index":37,"title":{},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Brand.html":{},"classes/Color.html":{},"interfaces/Deserializable.html":{},"components/FooterComponent.html":{},"pipes/ImageFilterPipe.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"classes/Qbox.html":{},"classes/Tech.html":{},"interfaces/TechOption.html":{},"overview.html":{}}}],["express",{"_index":379,"title":{},"body":{"components/FooterComponent.html":{},"dependencies.html":{},"index.html":{}}}],["fals",{"_index":104,"title":{},"body":{"components/AccordionComponent.html":{},"components/PanelComponent.html":{},"miscellaneous/variables.html":{}}}],["favicon",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["feed",{"_index":402,"title":{},"body":{"components/FooterComponent.html":{}}}],["fetch",{"_index":153,"title":{},"body":{"injectables/ApiService.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Brand.html":{},"classes/Color.html":{},"interfaces/Deserializable.html":{},"components/FooterComponent.html":{},"pipes/ImageFilterPipe.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"classes/Qbox.html":{},"classes/Tech.html":{},"interfaces/TechOption.html":{},"coverage.html":{},"index.html":{}}}],["filter",{"_index":411,"title":{},"body":{"pipes/ImageFilterPipe.html":{}}}],["filter.pip",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["filter.pipe.t",{"_index":409,"title":{},"body":{"pipes/ImageFilterPipe.html":{},"coverage.html":{}}}],["filter.pipe.ts:23",{"_index":415,"title":{},"body":{"pipes/ImageFilterPipe.html":{}}}],["first",{"_index":99,"title":{},"body":{"components/AccordionComponent.html":{}}}],["flag",{"_index":635,"title":{},"body":{"index.html":{}}}],["folder",{"_index":651,"title":{},"body":{"index.html":{}}}],["footer",{"_index":347,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'nam",{"_index":121,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["footer.component.html",{"_index":349,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":348,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.compon",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["footercompon",{"_index":120,"title":{"components/FooterComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formsmodul",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["full",{"_index":358,"title":{},"body":{"components/FooterComponent.html":{}}}],["fulli",{"_index":72,"title":{},"body":{"components/AccordionComponent.html":{}}}],["further",{"_index":646,"title":{},"body":{"index.html":{}}}],["gener",{"_index":612,"title":{},"body":{"index.html":{}}}],["get",{"_index":608,"title":{"index.html":{}},"body":{}}],["getaccordion",{"_index":141,"title":{},"body":{"injectables/ApiService.html":{}}}],["getbrand",{"_index":142,"title":{},"body":{"injectables/ApiService.html":{}}}],["getcolor",{"_index":143,"title":{},"body":{"injectables/ApiService.html":{}}}],["getlanguag",{"_index":435,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getparagraphtext",{"_index":312,"title":{},"body":{"classes/AppPage.html":{}}}],["getqbox",{"_index":144,"title":{},"body":{"injectables/ApiService.html":{}}}],["gettech",{"_index":145,"title":{},"body":{"injectables/ApiService.html":{}}}],["git",{"_index":383,"title":{},"body":{"components/FooterComponent.html":{}}}],["github",{"_index":384,"title":{},"body":{"components/FooterComponent.html":{}}}],["go",{"_index":648,"title":{},"body":{"index.html":{}}}],["h1')).gettext",{"_index":319,"title":{},"body":{"classes/AppPage.html":{}}}],["handl",{"_index":166,"title":{},"body":{"injectables/ApiService.html":{}}}],["handleerror",{"_index":147,"title":{},"body":{"injectables/ApiService.html":{}}}],["handleerror(err",{"_index":163,"title":{},"body":{"injectables/ApiService.html":{}}}],["handler",{"_index":471,"title":{},"body":{"components/PanelComponent.html":{}}}],["head'},{'nam",{"_index":130,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["head.compon",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["head.component.t",{"_index":527,"title":{},"body":{"coverage.html":{}}}],["head/main",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["header",{"_index":13,"title":{},"body":{"classes/Accordion.html":{},"components/MainComponent.html":{},"classes/Qbox.html":{}}}],["header'},{'nam",{"_index":123,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["header/header.compon",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["headercompon",{"_index":122,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hello",{"_index":354,"title":{},"body":{"components/FooterComponent.html":{}}}],["help",{"_index":647,"title":{},"body":{"index.html":{}}}],["hide",{"_index":460,"title":{},"body":{"components/MainComponent.html":{}}}],["hook",{"_index":68,"title":{},"body":{"components/AccordionComponent.html":{},"components/FooterComponent.html":{}}}],["html",{"_index":112,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["html5",{"_index":373,"title":{},"body":{"components/FooterComponent.html":{}}}],["http",{"_index":138,"title":{},"body":{"injectables/ApiService.html":{}}}],["http://localhost:3000",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":623,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":149,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpclientmodul",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":164,"title":{},"body":{"injectables/ApiService.html":{}}}],["https://daneden.github.io/animate.css",{"_index":618,"title":{},"body":{"index.html":{}}}],["id",{"_index":14,"title":{},"body":{"classes/Accordion.html":{},"classes/Brand.html":{},"classes/Color.html":{},"classes/Language.html":{},"classes/Qbox.html":{},"classes/Tech.html":{}}}],["identifi",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["imag",{"_index":410,"title":{},"body":{"pipes/ImageFilterPipe.html":{}}}],["imagefilt",{"_index":412,"title":{},"body":{"pipes/ImageFilterPipe.html":{}}}],["imagefilterpip",{"_index":262,"title":{"pipes/ImageFilterPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/ImageFilterPipe.html":{},"coverage.html":{},"overview.html":{}}}],["imagesrc",{"_index":331,"title":{},"body":{"classes/Color.html":{}}}],["implement",{"_index":8,"title":{},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"classes/Brand.html":{},"classes/Color.html":{},"components/FooterComponent.html":{},"pipes/ImageFilterPipe.html":{},"classes/Language.html":{},"components/MainComponent.html":{},"classes/Qbox.html":{},"classes/Tech.html":{}}}],["import",{"_index":36,"title":{},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Brand.html":{},"classes/Color.html":{},"components/FooterComponent.html":{},"pipes/ImageFilterPipe.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"classes/Qbox.html":{},"classes/Tech.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/Brand.html":{},"classes/Color.html":{},"interfaces/Deserializable.html":{},"components/FooterComponent.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"classes/Qbox.html":{},"classes/Tech.html":{},"interfaces/TechOption.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Brand.html":{},"classes/Color.html":{},"interfaces/Deserializable.html":{},"components/FooterComponent.html":{},"pipes/ImageFilterPipe.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"classes/Qbox.html":{},"classes/Tech.html":{},"interfaces/TechOption.html":{}}}],["initi",{"_index":73,"title":{},"body":{"components/AccordionComponent.html":{},"components/FooterComponent.html":{}}}],["inject",{"_index":135,"title":{"injectables/ApiService.html":{},"injectables/LanguageService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/LanguageService.html":{},"coverage.html":{},"overview.html":{}}}],["inport",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["input",{"_index":34,"title":{},"body":{"classes/Accordion.html":{},"classes/Brand.html":{},"classes/Color.html":{},"interfaces/Deserializable.html":{},"classes/Language.html":{},"components/PanelComponent.html":{},"classes/Qbox.html":{},"classes/Tech.html":{}}}],["instagram",{"_index":401,"title":{},"body":{"components/FooterComponent.html":{}}}],["instanceof",{"_index":226,"title":{},"body":{"injectables/ApiService.html":{}}}],["interfac",{"_index":342,"title":{"interfaces/Deserializable.html":{},"interfaces/TechOption.html":{}},"body":{"interfaces/Deserializable.html":{},"interfaces/TechOption.html":{},"coverage.html":{},"overview.html":{}}}],["intersect",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["inviewport",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["inviewportmodul",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["inviewportmodule.forroot",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["item",{"_index":416,"title":{},"body":{"pipes/ImageFilterPipe.html":{}}}],["item.conditions.foreach((itemcolor",{"_index":419,"title":{},"body":{"pipes/ImageFilterPipe.html":{}}}],["itemcolor",{"_index":420,"title":{},"body":{"pipes/ImageFilterPipe.html":{}}}],["items.foreach((item",{"_index":418,"title":{},"body":{"pipes/ImageFilterPipe.html":{}}}],["javascript",{"_index":360,"title":{},"body":{"components/FooterComponent.html":{}}}],["js",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["json'}).map(respons",{"_index":191,"title":{},"body":{"injectables/ApiService.html":{}}}],["karma",{"_index":641,"title":{},"body":{"index.html":{}}}],["keep",{"_index":390,"title":{},"body":{"components/FooterComponent.html":{}}}],["kind",{"_index":369,"title":{},"body":{"components/FooterComponent.html":{}}}],["kiskin",{"_index":356,"title":{},"body":{"components/FooterComponent.html":{}}}],["kiskinvlad2",{"_index":400,"title":{},"body":{"components/FooterComponent.html":{}}}],["kiskinvlad@gmail.com",{"_index":397,"title":{},"body":{"components/FooterComponent.html":{}}}],["kland",{"_index":610,"title":{},"body":{"index.html":{}}}],["languag",{"_index":422,"title":{"classes/Language.html":{}},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"coverage.html":{}}}],["language(0",{"_index":439,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language(1",{"_index":446,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language(2",{"_index":449,"title":{},"body":{"injectables/LanguageService.html":{}}}],["languageservic",{"_index":263,"title":{"injectables/LanguageService.html":{}},"body":{"modules/AppModule.html":{},"injectables/LanguageService.html":{},"coverage.html":{},"overview.html":{}}}],["lanuagesarray",{"_index":432,"title":{},"body":{"injectables/LanguageService.html":{}}}],["learn",{"_index":365,"title":{},"body":{"components/FooterComponent.html":{}}}],["legend",{"_index":111,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"overview.html":{}}}],["lifecycl",{"_index":67,"title":{},"body":{"components/AccordionComponent.html":{},"components/FooterComponent.html":{}}}],["like",{"_index":364,"title":{},"body":{"components/FooterComponent.html":{}}}],["link",{"_index":489,"title":{},"body":{"classes/Tech.html":{}}}],["list",{"_index":87,"title":{},"body":{"components/AccordionComponent.html":{}}}],["liter",{"_index":497,"title":{},"body":{"classes/Tech.html":{}}}],["localhost:3000",{"_index":645,"title":{},"body":{"index.html":{}}}],["main",{"_index":125,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["main'},{'nam",{"_index":128,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["main.component.html",{"_index":457,"title":{},"body":{"components/MainComponent.html":{}}}],["main.component.scss",{"_index":456,"title":{},"body":{"components/MainComponent.html":{}}}],["main/main.compon",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["mainbodycompon",{"_index":124,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["maincompon",{"_index":127,"title":{"components/MainComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mainheadcompon",{"_index":129,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["maintext",{"_index":490,"title":{},"body":{"classes/Tech.html":{}}}],["match",{"_index":44,"title":{},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Brand.html":{},"classes/Color.html":{},"interfaces/Deserializable.html":{},"components/FooterComponent.html":{},"pipes/ImageFilterPipe.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"classes/Qbox.html":{},"classes/Tech.html":{},"interfaces/TechOption.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":52,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"pipes/ImageFilterPipe.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["method",{"_index":16,"title":{},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"classes/AppPage.html":{},"classes/Brand.html":{},"classes/Color.html":{},"interfaces/Deserializable.html":{},"components/FooterComponent.html":{},"pipes/ImageFilterPipe.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/MainComponent.html":{},"classes/Qbox.html":{},"classes/Tech.html":{}}}],["middl",{"_index":132,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["middlecontentcompon",{"_index":131,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["miscellan",{"_index":661,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":7,"title":{},"body":{"classes/Accordion.html":{},"modules/AppModule.html":{},"classes/Brand.html":{},"classes/Color.html":{},"classes/Language.html":{},"classes/Qbox.html":{},"classes/Tech.html":{}}}],["models/accordion",{"_index":177,"title":{},"body":{"injectables/ApiService.html":{}}}],["models/brand",{"_index":175,"title":{},"body":{"injectables/ApiService.html":{}}}],["models/color",{"_index":174,"title":{},"body":{"injectables/ApiService.html":{}}}],["models/languag",{"_index":452,"title":{},"body":{"injectables/LanguageService.html":{}}}],["models/qbox",{"_index":176,"title":{},"body":{"injectables/ApiService.html":{}}}],["models/tech",{"_index":173,"title":{},"body":{"injectables/ApiService.html":{}}}],["modul",{"_index":252,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":371,"title":{},"body":{"components/FooterComponent.html":{},"index.html":{}}}],["morgan",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":27,"title":{},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/Brand.html":{},"classes/Color.html":{},"interfaces/Deserializable.html":{},"components/FooterComponent.html":{},"pipes/ImageFilterPipe.html":{},"classes/Language.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"classes/Qbox.html":{},"classes/Tech.html":{},"index.html":{}}}],["navig",{"_index":622,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":313,"title":{},"body":{"classes/AppPage.html":{}}}],["network",{"_index":228,"title":{},"body":{"injectables/ApiService.html":{}}}],["new",{"_index":193,"title":{},"body":{"injectables/ApiService.html":{},"components/FooterComponent.html":{},"injectables/LanguageService.html":{},"components/PanelComponent.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngaftercontentinit",{"_index":60,"title":{},"body":{"components/AccordionComponent.html":{}}}],["ngmodul",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":350,"title":{},"body":{"components/FooterComponent.html":{},"components/MainComponent.html":{}}}],["ngselectmodul",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["ngx",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["node",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["nodej",{"_index":380,"title":{},"body":{"components/FooterComponent.html":{}}}],["npm",{"_index":644,"title":{},"body":{"index.html":{}}}],["number",{"_index":21,"title":{},"body":{"classes/Accordion.html":{},"classes/Brand.html":{},"classes/Color.html":{},"classes/Language.html":{},"classes/Qbox.html":{},"classes/Tech.html":{}}}],["object",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.assign(thi",{"_index":42,"title":{},"body":{"classes/Accordion.html":{},"classes/Brand.html":{},"classes/Color.html":{},"classes/Language.html":{},"classes/Qbox.html":{},"classes/Tech.html":{}}}],["observ",{"_index":154,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["observable.empti",{"_index":244,"title":{},"body":{"injectables/ApiService.html":{}}}],["occur",{"_index":229,"title":{},"body":{"injectables/ApiService.html":{}}}],["oninit",{"_index":88,"title":{},"body":{"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{}}}],["open",{"_index":80,"title":{},"body":{"components/AccordionComponent.html":{},"components/PanelComponent.html":{}}}],["openpanel",{"_index":61,"title":{},"body":{"components/AccordionComponent.html":{}}}],["openpanel(panel",{"_index":75,"title":{},"body":{"components/AccordionComponent.html":{}}}],["option",{"_index":29,"title":{},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"classes/Brand.html":{},"classes/Color.html":{},"interfaces/Deserializable.html":{},"pipes/ImageFilterPipe.html":{},"classes/Language.html":{},"classes/Qbox.html":{},"classes/Tech.html":{}}}],["option.t",{"_index":506,"title":{},"body":{"interfaces/TechOption.html":{},"coverage.html":{}}}],["option.ts:6",{"_index":507,"title":{},"body":{"interfaces/TechOption.html":{}}}],["option.ts:7",{"_index":508,"title":{},"body":{"interfaces/TechOption.html":{}}}],["orient",{"_index":388,"title":{},"body":{"components/FooterComponent.html":{}}}],["out",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":465,"title":{},"body":{"components/PanelComponent.html":{}}}],["overview",{"_index":657,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.open",{"_index":103,"title":{},"body":{"components/AccordionComponent.html":{}}}],["packag",{"_index":555,"title":{"dependencies.html":{}},"body":{}}],["panel",{"_index":59,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["panel.component.html",{"_index":464,"title":{},"body":{"components/PanelComponent.html":{}}}],["panel.component.scss",{"_index":463,"title":{},"body":{"components/PanelComponent.html":{}}}],["panel.open",{"_index":105,"title":{},"body":{"components/AccordionComponent.html":{}}}],["panel.toggle.subscrib",{"_index":96,"title":{},"body":{"components/AccordionComponent.html":{}}}],["panel/panel.compon",{"_index":90,"title":{},"body":{"components/AccordionComponent.html":{},"modules/AppModule.html":{}}}],["panelcompon",{"_index":76,"title":{"components/PanelComponent.html":{}},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["param",{"_index":38,"title":{},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"classes/Brand.html":{},"classes/Color.html":{},"pipes/ImageFilterPipe.html":{},"classes/Language.html":{},"classes/Qbox.html":{},"classes/Tech.html":{}}}],["paramet",{"_index":25,"title":{},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"classes/Brand.html":{},"classes/Color.html":{},"interfaces/Deserializable.html":{},"pipes/ImageFilterPipe.html":{},"classes/Language.html":{},"classes/Qbox.html":{},"classes/Tech.html":{}}}],["parser",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":398,"title":{},"body":{"components/FooterComponent.html":{}}}],["pipe",{"_index":407,"title":{"pipes/ImageFilterPipe.html":{}},"body":{"pipes/ImageFilterPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes/imag",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":417,"title":{},"body":{"pipes/ImageFilterPipe.html":{}}}],["post",{"_index":476,"title":{},"body":{"classes/Qbox.html":{}}}],["privat",{"_index":146,"title":{},"body":{"injectables/ApiService.html":{}}}],["prod",{"_index":634,"title":{},"body":{"index.html":{}}}],["product",{"_index":636,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":611,"title":{},"body":{"index.html":{}}}],["properti",{"_index":12,"title":{},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"components/AppComponent.html":{},"classes/Brand.html":{},"classes/Color.html":{},"components/FooterComponent.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Qbox.html":{},"classes/Tech.html":{},"interfaces/TechOption.html":{}}}],["protractor",{"_index":316,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provid",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":17,"title":{},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"classes/Brand.html":{},"classes/Color.html":{},"pipes/ImageFilterPipe.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Qbox.html":{},"classes/Tech.html":{}}}],["push",{"_index":438,"title":{},"body":{"injectables/LanguageService.html":{}}}],["python",{"_index":382,"title":{},"body":{"components/FooterComponent.html":{}}}],["qbox",{"_index":160,"title":{"classes/Qbox.html":{}},"body":{"injectables/ApiService.html":{},"classes/Qbox.html":{},"coverage.html":{}}}],["qbox(qbox.id",{"_index":214,"title":{},"body":{"injectables/ApiService.html":{}}}],["qbox.author",{"_index":217,"title":{},"body":{"injectables/ApiService.html":{}}}],["qbox.head",{"_index":215,"title":{},"body":{"injectables/ApiService.html":{}}}],["qbox.post",{"_index":218,"title":{},"body":{"injectables/ApiService.html":{}}}],["qbox.rat",{"_index":219,"title":{},"body":{"injectables/ApiService.html":{}}}],["qbox.text",{"_index":216,"title":{},"body":{"injectables/ApiService.html":{}}}],["queri",{"_index":86,"title":{},"body":{"components/AccordionComponent.html":{}}}],["querylist",{"_index":82,"title":{},"body":{"components/AccordionComponent.html":{}}}],["rate",{"_index":477,"title":{},"body":{"classes/Qbox.html":{}}}],["reactiveformsmodul",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["readm",{"_index":650,"title":{},"body":{"index.html":{}}}],["relat",{"_index":386,"title":{},"body":{"components/FooterComponent.html":{}}}],["reload",{"_index":625,"title":{},"body":{"index.html":{}}}],["requir",{"_index":552,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rerfer",{"_index":109,"title":{},"body":{"components/AccordionComponent.html":{}}}],["reserv",{"_index":406,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["respons",{"_index":235,"title":{},"body":{"injectables/ApiService.html":{}}}],["response.map((accordion",{"_index":221,"title":{},"body":{"injectables/ApiService.html":{}}}],["response.map((brand",{"_index":208,"title":{},"body":{"injectables/ApiService.html":{}}}],["response.map((color",{"_index":201,"title":{},"body":{"injectables/ApiService.html":{}}}],["response.map((qbox",{"_index":213,"title":{},"body":{"injectables/ApiService.html":{}}}],["response.map((tech",{"_index":192,"title":{},"body":{"injectables/ApiService.html":{}}}],["responsetyp",{"_index":190,"title":{},"body":{"injectables/ApiService.html":{}}}],["result",{"_index":43,"title":{},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Brand.html":{},"classes/Color.html":{},"interfaces/Deserializable.html":{},"components/FooterComponent.html":{},"pipes/ImageFilterPipe.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"classes/Qbox.html":{},"classes/Tech.html":{},"interfaces/TechOption.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.push(item",{"_index":421,"title":{},"body":{"pipes/ImageFilterPipe.html":{}}}],["return",{"_index":35,"title":{},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"classes/AppPage.html":{},"classes/Brand.html":{},"classes/Color.html":{},"interfaces/Deserializable.html":{},"components/FooterComponent.html":{},"pipes/ImageFilterPipe.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/MainComponent.html":{},"classes/Qbox.html":{},"classes/Tech.html":{}}}],["right",{"_index":405,"title":{},"body":{"components/FooterComponent.html":{}}}],["root",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{}}}],["root'},{'nam",{"_index":119,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["routermodul",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["ru",{"_index":447,"title":{},"body":{"injectables/LanguageService.html":{}}}],["run",{"_index":620,"title":{},"body":{"index.html":{}}}],["russian",{"_index":433,"title":{},"body":{"injectables/LanguageService.html":{}}}],["rxj",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["rxjs/add/observable/empti",{"_index":180,"title":{},"body":{"injectables/ApiService.html":{}}}],["rxjs/add/observable/of",{"_index":179,"title":{},"body":{"injectables/ApiService.html":{}}}],["rxjs/add/operator/catch",{"_index":178,"title":{},"body":{"injectables/ApiService.html":{}}}],["rxjs/add/operator/map",{"_index":182,"title":{},"body":{"injectables/ApiService.html":{}}}],["rxjs/add/operator/retri",{"_index":181,"title":{},"body":{"injectables/ApiService.html":{}}}],["rxjs/observ",{"_index":172,"title":{},"body":{"injectables/ApiService.html":{}}}],["scaffold",{"_index":626,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["secondtext",{"_index":491,"title":{},"body":{"classes/Tech.html":{}}}],["select",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["select/ng",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["selector",{"_index":53,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["serv",{"_index":593,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["server",{"_index":619,"title":{},"body":{"index.html":{}}}],["servic",{"_index":140,"title":{},"body":{"injectables/ApiService.html":{},"injectables/LanguageService.html":{},"dependencies.html":{}}}],["services/api.servic",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["services/language.servic",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":78,"title":{},"body":{"components/AccordionComponent.html":{}}}],["settimeout",{"_index":97,"title":{},"body":{"components/AccordionComponent.html":{}}}],["short",{"_index":424,"title":{},"body":{"classes/Language.html":{}}}],["side",{"_index":227,"title":{},"body":{"injectables/ApiService.html":{}}}],["size",{"_index":652,"title":{},"body":{"index.html":{}}}],["skype",{"_index":399,"title":{},"body":{"components/FooterComponent.html":{}}}],["slick",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["slickmodul",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["slickmodule.forroot",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Brand.html":{},"classes/Color.html":{},"interfaces/Deserializable.html":{},"components/FooterComponent.html":{},"pipes/ImageFilterPipe.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{},"classes/Qbox.html":{},"classes/Tech.html":{},"interfaces/TechOption.html":{},"index.html":{}}}],["spec\\.t",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src",{"_index":321,"title":{},"body":{"classes/Brand.html":{}}}],["src/.../api.service.t",{"_index":662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/accordion/accordion.component.t",{"_index":50,"title":{},"body":{"components/AccordionComponent.html":{},"coverage.html":{}}}],["src/app/accordion/accordion.component.ts:23",{"_index":85,"title":{},"body":{"components/AccordionComponent.html":{}}}],["src/app/accordion/accordion.component.ts:31",{"_index":66,"title":{},"body":{"components/AccordionComponent.html":{}}}],["src/app/accordion/accordion.component.ts:52",{"_index":77,"title":{},"body":{"components/AccordionComponent.html":{}}}],["src/app/accordion/accordion.component.ts:55",{"_index":64,"title":{},"body":{"components/AccordionComponent.html":{}}}],["src/app/app.component.t",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/deserializable.t",{"_index":343,"title":{},"body":{"interfaces/Deserializable.html":{},"coverage.html":{}}}],["src/app/deserializable.ts:2",{"_index":344,"title":{},"body":{"interfaces/Deserializable.html":{}}}],["src/app/footer/footer.component.t",{"_index":346,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/footer/footer.component.ts:16",{"_index":351,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/footer/footer.component.ts:28",{"_index":352,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/header/header.component.t",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["src/app/main",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["src/app/main/main.component.t",{"_index":454,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["src/app/main/main.component.ts:11",{"_index":458,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/main/main.component.ts:22",{"_index":459,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/middl",{"_index":530,"title":{},"body":{"coverage.html":{}}}],["src/app/models/accordion.t",{"_index":5,"title":{},"body":{"classes/Accordion.html":{},"coverage.html":{}}}],["src/app/models/accordion.ts:10",{"_index":30,"title":{},"body":{"classes/Accordion.html":{}}}],["src/app/models/accordion.ts:11",{"_index":24,"title":{},"body":{"classes/Accordion.html":{}}}],["src/app/models/accordion.ts:30",{"_index":33,"title":{},"body":{"classes/Accordion.html":{}}}],["src/app/models/accordion.ts:9",{"_index":31,"title":{},"body":{"classes/Accordion.html":{}}}],["src/app/models/brand.t",{"_index":320,"title":{},"body":{"classes/Brand.html":{},"coverage.html":{}}}],["src/app/models/brand.ts:10",{"_index":324,"title":{},"body":{"classes/Brand.html":{}}}],["src/app/models/brand.ts:11",{"_index":322,"title":{},"body":{"classes/Brand.html":{}}}],["src/app/models/brand.ts:30",{"_index":325,"title":{},"body":{"classes/Brand.html":{}}}],["src/app/models/brand.ts:9",{"_index":323,"title":{},"body":{"classes/Brand.html":{}}}],["src/app/models/color.t",{"_index":328,"title":{},"body":{"classes/Color.html":{},"coverage.html":{}}}],["src/app/models/color.ts:10",{"_index":337,"title":{},"body":{"classes/Color.html":{}}}],["src/app/models/color.ts:11",{"_index":334,"title":{},"body":{"classes/Color.html":{}}}],["src/app/models/color.ts:12",{"_index":336,"title":{},"body":{"classes/Color.html":{}}}],["src/app/models/color.ts:13",{"_index":333,"title":{},"body":{"classes/Color.html":{}}}],["src/app/models/color.ts:36",{"_index":338,"title":{},"body":{"classes/Color.html":{}}}],["src/app/models/color.ts:9",{"_index":335,"title":{},"body":{"classes/Color.html":{}}}],["src/app/models/language.t",{"_index":423,"title":{},"body":{"classes/Language.html":{},"coverage.html":{}}}],["src/app/models/language.ts:10",{"_index":427,"title":{},"body":{"classes/Language.html":{}}}],["src/app/models/language.ts:11",{"_index":425,"title":{},"body":{"classes/Language.html":{}}}],["src/app/models/language.ts:30",{"_index":428,"title":{},"body":{"classes/Language.html":{}}}],["src/app/models/language.ts:9",{"_index":426,"title":{},"body":{"classes/Language.html":{}}}],["src/app/models/qbox.t",{"_index":474,"title":{},"body":{"classes/Qbox.html":{},"coverage.html":{}}}],["src/app/models/qbox.ts:10",{"_index":480,"title":{},"body":{"classes/Qbox.html":{}}}],["src/app/models/qbox.ts:11",{"_index":483,"title":{},"body":{"classes/Qbox.html":{}}}],["src/app/models/qbox.ts:12",{"_index":479,"title":{},"body":{"classes/Qbox.html":{}}}],["src/app/models/qbox.ts:13",{"_index":482,"title":{},"body":{"classes/Qbox.html":{}}}],["src/app/models/qbox.ts:14",{"_index":478,"title":{},"body":{"classes/Qbox.html":{}}}],["src/app/models/qbox.ts:39",{"_index":484,"title":{},"body":{"classes/Qbox.html":{}}}],["src/app/models/qbox.ts:9",{"_index":481,"title":{},"body":{"classes/Qbox.html":{}}}],["src/app/models/tech.t",{"_index":488,"title":{},"body":{"classes/Tech.html":{},"coverage.html":{}}}],["src/app/models/tech.ts:10",{"_index":496,"title":{},"body":{"classes/Tech.html":{}}}],["src/app/models/tech.ts:11",{"_index":498,"title":{},"body":{"classes/Tech.html":{}}}],["src/app/models/tech.ts:12",{"_index":499,"title":{},"body":{"classes/Tech.html":{}}}],["src/app/models/tech.ts:13",{"_index":494,"title":{},"body":{"classes/Tech.html":{}}}],["src/app/models/tech.ts:40",{"_index":500,"title":{},"body":{"classes/Tech.html":{}}}],["src/app/models/tech.ts:9",{"_index":495,"title":{},"body":{"classes/Tech.html":{}}}],["src/app/panel/panel.component.t",{"_index":462,"title":{},"body":{"components/PanelComponent.html":{},"coverage.html":{}}}],["src/app/panel/panel.component.ts:21",{"_index":469,"title":{},"body":{"components/PanelComponent.html":{}}}],["src/app/panel/panel.component.ts:27",{"_index":470,"title":{},"body":{"components/PanelComponent.html":{}}}],["src/app/panel/panel.component.ts:33",{"_index":467,"title":{},"body":{"components/PanelComponent.html":{}}}],["src/app/pipes/imag",{"_index":408,"title":{},"body":{"pipes/ImageFilterPipe.html":{},"coverage.html":{}}}],["src/app/services/api.service.t",{"_index":137,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/api.service.ts:27",{"_index":150,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:40",{"_index":161,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:50",{"_index":157,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:60",{"_index":155,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:70",{"_index":159,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:80",{"_index":152,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:91",{"_index":165,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/language.service.t",{"_index":430,"title":{},"body":{"injectables/LanguageService.html":{},"coverage.html":{}}}],["src/app/services/language.service.ts:15",{"_index":441,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/services/language.service.ts:16",{"_index":448,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/services/language.service.ts:17",{"_index":451,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/services/language.service.ts:19",{"_index":445,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/services/language.service.ts:29",{"_index":437,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/services/language.service.ts:9",{"_index":436,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/tech",{"_index":505,"title":{},"body":{"interfaces/TechOption.html":{},"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":547,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":549,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":550,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":359,"title":{},"body":{"components/FooterComponent.html":{}}}],["start",{"_index":609,"title":{"index.html":{}},"body":{}}],["state",{"_index":81,"title":{},"body":{"components/AccordionComponent.html":{},"components/PanelComponent.html":{}}}],["statement",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":631,"title":{},"body":{"index.html":{}}}],["string",{"_index":22,"title":{},"body":{"classes/Accordion.html":{},"components/AppComponent.html":{},"classes/Brand.html":{},"classes/Color.html":{},"pipes/ImageFilterPipe.html":{},"classes/Language.html":{},"components/PanelComponent.html":{},"classes/Qbox.html":{},"classes/Tech.html":{},"interfaces/TechOption.html":{}}}],["styleurl",{"_index":55,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["support",{"_index":654,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":655,"title":{},"body":{"modules.html":{}}}],["t",{"_index":345,"title":{},"body":{"interfaces/Deserializable.html":{}}}],["tabl",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":370,"title":{},"body":{"components/FooterComponent.html":{}}}],["tech",{"_index":162,"title":{"classes/Tech.html":{}},"body":{"injectables/ApiService.html":{},"classes/Tech.html":{},"coverage.html":{}}}],["tech(tech.id",{"_index":194,"title":{},"body":{"injectables/ApiService.html":{}}}],["tech.link",{"_index":195,"title":{},"body":{"injectables/ApiService.html":{}}}],["tech.maintext",{"_index":196,"title":{},"body":{"injectables/ApiService.html":{}}}],["tech.secondtext",{"_index":197,"title":{},"body":{"injectables/ApiService.html":{}}}],["tech.thirdtext",{"_index":198,"title":{},"body":{"injectables/ApiService.html":{}}}],["technolog",{"_index":366,"title":{},"body":{"components/FooterComponent.html":{}}}],["techopt",{"_index":493,"title":{"interfaces/TechOption.html":{}},"body":{"classes/Tech.html":{},"interfaces/TechOption.html":{},"coverage.html":{}}}],["templat",{"_index":47,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["templateurl",{"_index":57,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["test",{"_index":638,"title":{},"body":{"index.html":{}}}],["text",{"_index":15,"title":{},"body":{"classes/Accordion.html":{},"classes/Qbox.html":{},"classes/Tech.html":{},"interfaces/TechOption.html":{}}}],["thirdtext",{"_index":492,"title":{},"body":{"classes/Tech.html":{}}}],["this.anim",{"_index":341,"title":{},"body":{"classes/Color.html":{}}}],["this.author",{"_index":485,"title":{},"body":{"classes/Qbox.html":{}}}],["this.cdref.detectchang",{"_index":94,"title":{},"body":{"components/AccordionComponent.html":{}}}],["this.condit",{"_index":339,"title":{},"body":{"classes/Color.html":{}}}],["this.english",{"_index":442,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.head",{"_index":40,"title":{},"body":{"classes/Accordion.html":{},"classes/Qbox.html":{}}}],["this.http.get(api_url",{"_index":188,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.id",{"_index":39,"title":{},"body":{"classes/Accordion.html":{},"classes/Brand.html":{},"classes/Color.html":{},"classes/Language.html":{},"classes/Qbox.html":{},"classes/Tech.html":{}}}],["this.imagesrc",{"_index":340,"title":{},"body":{"classes/Color.html":{}}}],["this.lanuagesarray",{"_index":453,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.link",{"_index":501,"title":{},"body":{"classes/Tech.html":{}}}],["this.maintext",{"_index":502,"title":{},"body":{"classes/Tech.html":{}}}],["this.nam",{"_index":326,"title":{},"body":{"classes/Brand.html":{},"classes/Color.html":{},"classes/Language.html":{}}}],["this.openpanel(panel",{"_index":98,"title":{},"body":{"components/AccordionComponent.html":{}}}],["this.openpanel(this.panels.toarray()[0",{"_index":101,"title":{},"body":{"components/AccordionComponent.html":{}}}],["this.panels.toarray().foreach((panel",{"_index":95,"title":{},"body":{"components/AccordionComponent.html":{}}}],["this.panels.toarray().foreach(p",{"_index":102,"title":{},"body":{"components/AccordionComponent.html":{}}}],["this.post",{"_index":486,"title":{},"body":{"classes/Qbox.html":{}}}],["this.rat",{"_index":487,"title":{},"body":{"classes/Qbox.html":{}}}],["this.russian",{"_index":444,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.secondtext",{"_index":503,"title":{},"body":{"classes/Tech.html":{}}}],["this.short",{"_index":429,"title":{},"body":{"classes/Language.html":{}}}],["this.src",{"_index":327,"title":{},"body":{"classes/Brand.html":{}}}],["this.text",{"_index":41,"title":{},"body":{"classes/Accordion.html":{},"classes/Qbox.html":{}}}],["this.thirdtext",{"_index":504,"title":{},"body":{"classes/Tech.html":{}}}],["this.ukrainian",{"_index":443,"title":{},"body":{"injectables/LanguageService.html":{}}}],["thisissoon/angular",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["titl",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"components/PanelComponent.html":{}}}],["toggl",{"_index":466,"title":{},"body":{"components/PanelComponent.html":{}}}],["tool",{"_index":616,"title":{},"body":{"index.html":{}}}],["touch",{"_index":391,"title":{},"body":{"components/FooterComponent.html":{}}}],["transform",{"_index":413,"title":{},"body":{"pipes/ImageFilterPipe.html":{}}}],["transform(item",{"_index":414,"title":{},"body":{"pipes/ImageFilterPipe.html":{}}}],["tree",{"_index":49,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["trigger",{"_index":461,"title":{},"body":{"components/MainComponent.html":{}}}],["true",{"_index":106,"title":{},"body":{"components/AccordionComponent.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":28,"title":{},"body":{"classes/Accordion.html":{},"components/AccordionComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/Brand.html":{},"classes/Color.html":{},"interfaces/Deserializable.html":{},"pipes/ImageFilterPipe.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/PanelComponent.html":{},"classes/Qbox.html":{},"classes/Tech.html":{},"interfaces/TechOption.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typedef",{"_index":92,"title":{},"body":{"components/AccordionComponent.html":{},"components/PanelComponent.html":{}}}],["typedoc",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["ua",{"_index":450,"title":{},"body":{"injectables/LanguageService.html":{}}}],["ui",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["uicarouselmodul",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["ukrain",{"_index":394,"title":{},"body":{"components/FooterComponent.html":{}}}],["ukraine(utc",{"_index":362,"title":{},"body":{"components/FooterComponent.html":{}}}],["ukrainian",{"_index":434,"title":{},"body":{"injectables/LanguageService.html":{}}}],["unit",{"_index":637,"title":{},"body":{"index.html":{}}}],["unsuccess",{"_index":234,"title":{},"body":{"injectables/ApiService.html":{}}}],["us",{"_index":627,"title":{},"body":{"index.html":{}}}],["valu",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"injectables/LanguageService.html":{},"components/PanelComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":115,"title":{},"body":{"components/AccordionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["variabl",{"_index":543,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":614,"title":{},"body":{"index.html":{}}}],["via",{"_index":640,"title":{},"body":{"index.html":{}}}],["viewport",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["vladislav",{"_index":355,"title":{},"body":{"components/FooterComponent.html":{}}}],["void",{"_index":74,"title":{},"body":{"components/AccordionComponent.html":{},"components/FooterComponent.html":{},"components/MainComponent.html":{}}}],["web",{"_index":372,"title":{},"body":{"components/FooterComponent.html":{}}}],["went",{"_index":240,"title":{},"body":{"injectables/ApiService.html":{}}}],["work",{"_index":367,"title":{},"body":{"components/FooterComponent.html":{}}}],["wrapper",{"_index":455,"title":{},"body":{"components/MainComponent.html":{}}}],["wrong",{"_index":241,"title":{},"body":{"injectables/ApiService.html":{}}}],["zaporіzhzhya",{"_index":395,"title":{},"body":{"components/FooterComponent.html":{}}}],["zone.j",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Accordion.html":{"url":"classes/Accordion.html","title":"class - Accordion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Accordion\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/accordion.ts\n        \n\n            \n                Description\n            \n            \n                Accordion model\n\n            \n\n\n            \n                Implements\n            \n            \n                        Deserializable\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                header\n                            \n                            \n                                id\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, header: string, text: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/accordion.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    id\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    header\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    text\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            header\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        header:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/accordion.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/accordion.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        text:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/accordion.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deserialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deserialize(input: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/accordion.ts:30\n                            \n                        \n\n                \n                    \n                            Deserialize Accordion model\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Accordion\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Deserializable} from '../deserializable';\n\n/**\n * Accordion model\n * @class Accordion\n * @implements Deserializable\n */\nexport class Accordion implements Deserializable {\n  id: number;\n  header: string;\n  text: string;\n\n  /**\n   * @constructor\n   * @param {id} id\n   * @param {header} header\n   * @param {text} text\n   */\n  constructor(id: number, header: string, text: string) {\n    this.id = id;\n    this.header = header;\n    this.text = text;\n  }\n\n  /**\n   * Deserialize Accordion model\n   * @param {input} any\n   * @returns {this}\n   */\n  public deserialize(input: any): Accordion {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccordionComponent.html":{"url":"components/AccordionComponent.html","title":"component - AccordionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccordionComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/accordion/accordion.component.ts\n\n\n    \n        Description\n    \n    \n        The accordion component.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-accordion\n            \n\n            \n                styleUrls\n                accordion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./accordion.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                panels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                openPanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/accordion/accordion.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    cdRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterContentInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterContentInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/accordion/accordion.component.ts:31\n                            \n                        \n\n                \n                    \n                            The Accordion component lifecycle hook\nthat is called after a directive's content has been\nfully initialized.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    void\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        openPanel(panel: PanelComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/accordion/accordion.component.ts:52\n                            \n                        \n\n                \n                    \n                            Set current panel to open state.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        panel\n                                                        \n                                                                    PanelComponent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    void\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            panels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        panels:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ContentChildren\n                        \n                    \n                        \n                            \n                                    Defined in src/app/accordion/accordion.component.ts:23\n                            \n                        \n\n                \n                    \n                        The accordion query list panel.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, ContentChildren, OnInit, QueryList, AfterContentInit, ChangeDetectorRef} from '@angular/core';\nimport {PanelComponent} from '../panel/panel.component';\n\n/**\n * The accordion component.\n */\n@Component({\n  selector: 'app-accordion',\n  templateUrl: './accordion.component.html',\n  styleUrls: ['./accordion.component.scss']\n})\n\n/**\n * @class AccordionComponent\n * @implements AfterContenInit\n */\nexport class AccordionComponent implements AfterContentInit {\n\n  /**\n   * The accordion query list panel.\n   * @typedef QueryList\n   */\n  @ContentChildren(PanelComponent) panels: QueryList;\n\n  /**\n   * The Accordion component lifecycle hook\n   * that is called after a directive's content has been\n   * fully initialized.\n   * @returns void\n   */\n  ngAfterContentInit(): void {\n    this.cdRef.detectChanges();\n    this.panels.toArray().forEach((panel: PanelComponent) => {\n      panel.toggle.subscribe(() =>  setTimeout(() => {\n        this.openPanel(panel);\n      }));\n    });\n\n  /**\n   * Set first panel open as default.\n   */\n    setTimeout(() => {\n      this.openPanel(this.panels.toArray()[0]);\n    });\n  }\n\n  /**\n   * Set current panel to open state.\n   * @param {panel} PanelComponent - current panel\n   * @returns void\n   */\n  public openPanel(panel: PanelComponent): void {\n    this.panels.toArray().forEach(p => p.opened = false);\n    panel.opened = true;\n  }\n\n  /**\n   * @constructor\n   * @param {cdRef} ChangeDetectorRef - Change detector rerference\n   */\n  constructor(private cdRef: ChangeDetectorRef) { }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'MainBodyComponent', 'selector': 'app-main-body'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MainHeadComponent', 'selector': 'app-main-head'},{'name': 'MiddleContentComponent', 'selector': 'app-middle-content'},{'name': 'PanelComponent', 'selector': 'app-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccordionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n            \n                Description\n            \n            \n                Http data service\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAccordion\n                            \n                            \n                                    Public\n                                getBrands\n                            \n                            \n                                    Public\n                                getColors\n                            \n                            \n                                    Public\n                                getQboxes\n                            \n                            \n                                    Public\n                                getTechs\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api.service.ts:27\n                            \n                        \n\n                \n                    \n                            Http client\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAccordion\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAccordion()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api.service.ts:80\n                            \n                        \n\n                \n                    \n                            Fetch accordion data\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    Observable\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getBrands\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBrands()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api.service.ts:60\n                            \n                        \n\n                \n                    \n                            Fetch brands\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    Observable\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getColors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getColors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api.service.ts:50\n                            \n                        \n\n                \n                    \n                            Fetch colors\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    Observable\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getQboxes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getQboxes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api.service.ts:70\n                            \n                        \n\n                \n                    \n                            Fetch qboxes\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    Observable\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTechs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTechs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api.service.ts:40\n                            \n                        \n\n                \n                    \n                            Fetch techs\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    Observable\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(err: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api.service.ts:91\n                            \n                        \n\n                \n                    \n                            Handle http errors\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        err\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    Observable\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs/Observable';\nimport {Tech} from '../models/tech';\nimport {Color} from '../models/color';\nimport {Brand} from '../models/brand';\nimport {Qbox} from '../models/qbox';\nimport {Accordion} from '../models/accordion';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/operator/retry';\nimport 'rxjs/add/operator/map';\n\n/**\n * Api endpoint\n */\nconst API_URL = environment.apiUrl;\n\n/**\n * Http data service\n * @class ApiService\n * @implements OnInit\n */\n@Injectable()\nexport class ApiService {\n\n  /**\n   * Http client\n   * @constructor\n   * @param {HttpClient} http\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Fetch techs\n   * @returns Observable\n   */\n  public getTechs(): Observable {\n    return this.http.get(API_URL + '/api/techs', {responseType: 'json'}).map(response => {\n      return response.map((tech) => new Tech(tech.id, tech.link, tech.mainText, tech.secondText, tech.thirdText));\n    }).catch(this.handleError);\n  }\n\n  /**\n   * Fetch colors\n   * @returns Observable\n   */\n  public getColors(): Observable  {\n    return this.http.get(API_URL + '/api/colors', {responseType: 'json'}).map(response => {\n      return response.map((color) => new Color(color.id, color.name, color.conditions, color.imageSrc, color.animation));\n    }).catch(this.handleError);\n  }\n\n  /**\n   * Fetch brands\n   * @returns Observable\n   */\n  public getBrands(): Observable  {\n    return this.http.get(API_URL + '/api/brands', {responseType: 'json'}).map(response => {\n      return response.map((brand) => new Brand(brand.id, brand.name, brand.src));\n    }).catch(this.handleError);\n  }\n\n  /**\n   * Fetch qboxes\n   * @returns Observable\n   */\n  public getQboxes(): Observable  {\n    return this.http.get(API_URL + '/api/qboxes', {responseType: 'json'}).map(response => {\n      return response.map((qbox) => new Qbox(qbox.id, qbox.header, qbox.text, qbox.author, qbox.post, qbox.rating));\n    }).catch(this.handleError);\n  }\n\n  /**\n   * Fetch accordion data\n   * @returns Observable\n   */\n  public getAccordion(): Observable  {\n    return this.http.get(API_URL + '/api/accordion', {responseType: 'json'}).map(response => {\n      return response.map((accordion) => new Accordion(accordion.id, accordion.header, accordion.text));\n    }).catch(this.handleError);\n  }\n\n  /**\n   * Handle http errors\n   * @param {err} HttpErrorResponse\n   * @returns Observable\n   */\n  private handleError (err: HttpErrorResponse): Observable  {\n    if (err.error instanceof Error) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', err.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(`Backend returned code ${err.status}, body was: ${err.error}`);\n    }\n    return Observable.empty();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        The main component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * The main component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title: String = 'app';\n}\n\n    \n\n    \n        \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'MainBodyComponent', 'selector': 'app-main-body'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MainHeadComponent', 'selector': 'app-main-head'},{'name': 'MiddleContentComponent', 'selector': 'app-middle-content'},{'name': 'PanelComponent', 'selector': 'app-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nMainHeadComponent\n\nMainHeadComponent\n\nAppModule -->\n\nMainHeadComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nMainBodyComponent\n\nMainBodyComponent\n\nAppModule -->\n\nMainBodyComponent->AppModule\n\n\n\n\n\nMiddleContentComponent\n\nMiddleContentComponent\n\nAppModule -->\n\nMiddleContentComponent->AppModule\n\n\n\n\n\nImageFilterPipe\n\nImageFilterPipe\n\nAppModule -->\n\nImageFilterPipe->AppModule\n\n\n\n\n\nPanelComponent\n\nPanelComponent\n\nAppModule -->\n\nPanelComponent->AppModule\n\n\n\n\n\nAccordionComponent\n\nAccordionComponent\n\nAppModule -->\n\nAccordionComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nLanguageService\n\nLanguageService\n\nAppModule -->\n\nLanguageService->AppModule\n\n\n\n\n\nApiService\n\nApiService\n\nAppModule -->\n\nApiService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                MainHeadComponent\n                            \n                            \n                                MainComponent\n                            \n                            \n                                MainBodyComponent\n                            \n                            \n                                MiddleContentComponent\n                            \n                            \n                                ImageFilterPipe\n                            \n                            \n                                PanelComponent\n                            \n                            \n                                AccordionComponent\n                            \n                            \n                                FooterComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     LanguageService\n                            \n                            \n                                     ApiService\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { MainHeadComponent } from './main-head/main-head.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { MainComponent } from './main/main.component';\nimport {LanguageService} from './services/language.service';\nimport { MainBodyComponent } from './main-body/main-body.component';\nimport {UICarouselModule} from 'ui-carousel';\nimport { InViewportModule } from 'ng-in-viewport';\nimport 'intersection-observer';\nimport { MiddleContentComponent } from './middle-content/middle-content.component';\nimport { ImageFilterPipe } from './pipes/image-filter.pipe';\nimport { SlickModule } from 'ngx-slick';\nimport { PanelComponent } from './panel/panel.component';\nimport { AccordionComponent } from './accordion/accordion.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { ApiService } from './services/api.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n/***\n * Boostrapper module\n */\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    MainHeadComponent,\n    MainComponent,\n    MainBodyComponent,\n    MiddleContentComponent,\n    ImageFilterPipe,\n    PanelComponent,\n    AccordionComponent,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    UICarouselModule,\n    InViewportModule.forRoot(),\n    SlickModule.forRoot(),\n    HttpClientModule,\n  ],\n  providers: [LanguageService, ApiService],\n  bootstrap: [AppComponent]\n})\n/**\n * Application main model\n * @class AppModule\n */\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            e2e/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParagraphText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetParagraphText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/app.po.ts:8\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/app.po.ts:4\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Brand.html":{"url":"classes/Brand.html","title":"class - Brand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Brand\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/brand.ts\n        \n\n            \n                Description\n            \n            \n                Brand model\n\n            \n\n\n            \n                Implements\n            \n            \n                        Deserializable\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                src\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, src: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/brand.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    id\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    src\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/brand.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/brand.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            src\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        src:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/brand.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deserialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deserialize(input: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/brand.ts:30\n                            \n                        \n\n                \n                    \n                            Deserialize Brand model\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Brand\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Deserializable} from '../deserializable';\n\n/**\n * Brand model\n * @class Brand\n * @implements Deserializable\n */\nexport class Brand implements Deserializable {\n  id: number;\n  name: string;\n  src: string;\n\n   /**\n   * @constructor\n   * @param {id} id\n   * @param {name} name\n   * @param {src} src\n   */\n  constructor(id: number, name: string, src: string) {\n    this.id = id;\n    this.name = name;\n    this.src = src;\n  }\n\n   /**\n   * Deserialize Brand model\n   * @param {input} any\n   * @returns {this}\n   */\n  public deserialize(input: any): Brand {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Color.html":{"url":"classes/Color.html","title":"class - Color","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Color\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/color.ts\n        \n\n            \n                Description\n            \n            \n                Color model\n\n            \n\n\n            \n                Implements\n            \n            \n                        Deserializable\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animation\n                            \n                            \n                                conditions\n                            \n                            \n                                id\n                            \n                            \n                                imageSrc\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, conditions: Array, imageSrc: string, animation: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/color.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    id\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    conditions\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    imageSrc\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    animation\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animation:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/color.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        conditions:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/color.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/color.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageSrc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        imageSrc:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/color.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/color.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deserialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deserialize(input: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/color.ts:36\n                            \n                        \n\n                \n                    \n                            Deserialize Color model\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Color\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Deserializable} from '../deserializable';\n\n/**\n * Color model\n * @class Color\n * @implements Deserializable\n */\nexport class Color implements Deserializable {\n  id: number;\n  name: string;\n  conditions: Array;\n  imageSrc: string;\n  animation: string;\n\n   /**\n   * @constructor\n   * @param {id} id\n   * @param {name} name\n   * @param {conditions} conditions\n   * @param {imageSrc} imageSrc\n   * @param {animation} animation\n   */\n  constructor(id: number, name: string, conditions: Array, imageSrc: string, animation: string) {\n    this.id = id;\n    this.name = name;\n    this.conditions = conditions;\n    this.imageSrc = imageSrc;\n    this.animation = animation;\n  }\n\n  /**\n   * Deserialize Color model\n   * @param {input} any\n   * @returns {this}\n   */\n  public deserialize(input: any): Color {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Deserializable.html":{"url":"interfaces/Deserializable.html","title":"interface - Deserializable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Deserializable\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/deserializable.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    deserialize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deserialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeserialize(input: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/deserializable.ts:2\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        export interface Deserializable {\n  deserialize(input: any): T;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/footer/footer.component.ts\n\n\n    \n        Description\n    \n    \n        The footer component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/footer/footer.component.ts:16\n                            \n                        \n\n                \n                    \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/footer/footer.component.ts:28\n                            \n                        \n\n                \n                    \n                            Lifecycle hook that is called after data-bound\nproperties of a directive are initialized.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    void\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * The footer component\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\n\n/**\n * @class AccordionComponent\n * @implements OnInit\n */\nexport class FooterComponent implements OnInit {\n\n  /**\n   * @constructor\n   */\n  constructor() { }\n\n  /**\n   * Lifecycle hook that is called after data-bound\n   * properties of a directive are initialized.\n   * @returns void\n   */\n  ngOnInit(): void { }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            About us\n            \n              Hello , my name is Vladislav Kiskin. I am experienced full-stack JavaScript developer from Ukraine(UTC +2)\n              who likes to learn new technologies and work on a different kind of tasks.\n            \n            Learn more\n          \n        \n        \n          \n            Web Technologies\n            \n              \n                \n                  HTML5 & CSS3\n                \n              \n              \n                \n                  AngularJS & Angular 2+\n                \n              \n              \n                \n                  Bootstrap 3 & 4\n                \n              \n              \n                \n                  Express on NodeJS\n                \n              \n              \n                \n                  Django on Python\n                \n              \n              \n                \n                  Git, Github, BitBucket\n                \n              \n              \n                \n                  Relational & Document-oriented databases\n                \n              \n            \n          \n        \n        \n          \n            keep in touch\n            \n              \n                edit_location\n                Address : Ukraine, Zaporіzhzhya\n              \n              \n                email\n                Email : kiskinvlad@gmail.com\n              \n              \n                phone\n                Skype: kiskinvlad2\n              \n            \n          \n        \n        \n          \n            instagram feed\n            \n              \n                \n                  \n                \n                \n                  \n                \n                \n                  \n                \n                \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n  \n    \n      Copyright © 2018. All Rights Reserved.\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          About us                          Hello , my name is Vladislav Kiskin. I am experienced full-stack JavaScript developer from Ukraine(UTC +2)              who likes to learn new technologies and work on a different kind of tasks.                        Learn more                                                Web Technologies                                                            HTML5 & CSS3                                                                              AngularJS & Angular 2+                                                                              Bootstrap 3 & 4                                                                              Express on NodeJS                                                                              Django on Python                                                                              Git, Github, BitBucket                                                                              Relational & Document-oriented databases                                                                                          keep in touch                                          edit_location                Address : Ukraine, Zaporіzhzhya                                            email                Email : kiskinvlad@gmail.com                                            phone                Skype: kiskinvlad2                                                                          instagram feed                                                                                                                                                                                                                                                                                                      Copyright © 2018. All Rights Reserved.      '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'MainBodyComponent', 'selector': 'app-main-body'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MainHeadComponent', 'selector': 'app-main-head'},{'name': 'MiddleContentComponent', 'selector': 'app-middle-content'},{'name': 'PanelComponent', 'selector': 'app-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ImageFilterPipe.html":{"url":"pipes/ImageFilterPipe.html","title":"pipe - ImageFilterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  ImageFilterPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/image-filter.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Image filter\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        imageFilter\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        transform(items: any[], color: String)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/image-filter.pipe.ts:23\n                            \n                        \n\n                \n                    \n                            Transform filtered array\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        color\n                                                        \n                                                                    String\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any[]\n\n                            \n                                \n                                    any[]\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Image filter\n *\n */\n@Pipe({\n  name: 'imageFilter'\n})\n/**\n * ImageFilterPipe class\n * @class ImageFilterPipe\n * @implements PipeTransform\n */\nexport class ImageFilterPipe implements PipeTransform {\n\n  /**\n   * Transform filtered array\n   * @param {items} any[] - array items\n   * @param {color} string - item color parameter\n   * @returns any[]\n   */\n  public transform(items: any[], color: String): any[] {\n    if (!items) { return []; }\n    if (color) {\n      const result = [];\n      items.forEach((item) => {\n        item.conditions.forEach((itemColor) => {\n          if (itemColor === color) {\n            result.push(item);\n          }\n        });\n      });\n      items = result;\n      return items;\n    } else {\n      return items;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Language.html":{"url":"classes/Language.html","title":"class - Language","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Language\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/language.ts\n        \n\n            \n                Description\n            \n            \n                Language model\n\n            \n\n\n            \n                Implements\n            \n            \n                        Deserializable\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                short\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, short: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/language.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    id\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    short\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/language.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/language.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            short\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        short:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/language.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deserialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deserialize(input: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/language.ts:30\n                            \n                        \n\n                \n                    \n                            Deserialize Language model\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Language\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Deserializable} from '../deserializable';\n\n/**\n * Language model\n * @class Language\n * @implements Deserializable\n */\nexport class Language implements Deserializable {\n  id: number;\n  name: string;\n  short: string;\n\n  /**\n   * @constructor\n   * @param {id} id\n   * @param {name} name\n   * @param {short} short\n   */\n  constructor(id: number, name: string, short: string) {\n    this.id = id;\n    this.name = name;\n    this.short = short;\n  }\n\n  /**\n   * Deserialize Language model\n   * @param {input} any\n   * @returns {this}\n   */\n  public deserialize(input: any): Language {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LanguageService.html":{"url":"injectables/LanguageService.html","title":"injectable - LanguageService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LanguageService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/language.service.ts\n        \n\n            \n                Description\n            \n            \n                Language service\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                English\n                            \n                            \n                                lanuagesArray\n                            \n                            \n                                Russian\n                            \n                            \n                                Ukrainian\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getLanguages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/language.service.ts:9\n                            \n                        \n\n                \n                    \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLanguages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLanguages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/language.service.ts:29\n                            \n                        \n\n                \n                    \n                            Push languages to language array\n\n\n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    Array\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            English\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        English:     Language\n\n                    \n                \n                    \n                        \n                            Type :     Language\n\n                        \n                    \n                    \n                        \n                            Default value : new Language(0, 'English', 'ENG')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/language.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lanuagesArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lanuagesArray:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    this.English,\n    this.Ukrainian,\n    this.Russian\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/language.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Russian\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Russian:     Language\n\n                    \n                \n                    \n                        \n                            Type :     Language\n\n                        \n                    \n                    \n                        \n                            Default value : new Language(1, 'Russian', 'RUS')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/language.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Ukrainian\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Ukrainian:     Language\n\n                    \n                \n                    \n                        \n                            Type :     Language\n\n                        \n                    \n                    \n                        \n                            Default value : new Language(2, 'Ukrainian', 'UA')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/language.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Language} from '../models/language';\n\n/**\n * Language service\n * @class LanguageService\n */\n@Injectable()\nexport class LanguageService {\n\n  /**\n   * @constructor\n   */\n  constructor() { }\n  English: Language = new Language(0, 'English', 'ENG');\n  Russian: Language = new Language(1, 'Russian', 'RUS');\n  Ukrainian: Language = new Language(2, 'Ukrainian', 'UA');\n\n  lanuagesArray: Array = [\n    this.English,\n    this.Ukrainian,\n    this.Russian\n  ];\n\n  /**\n   * Push languages to language array\n   * @returns Array\n   */\n  public getLanguages(): Array {\n    return this.lanuagesArray;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/main/main.component.ts\n\n\n    \n        Description\n    \n    \n        The main component - components wrapper.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main\n            \n\n            \n                styleUrls\n                main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main/main.component.ts:11\n                            \n                        \n\n                \n                    \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/main/main.component.ts:22\n                            \n                        \n\n                \n                    \n                            Hide header trigger\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    void\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * The main component - components wrapper.\n */\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  /**\n   * @constructor\n   */\n  constructor() { }\n\n  /**\n  * Hide header trigger\n  * @returns void\n  */\n  ngOnInit(): void { }\n\n}\n\n    \n\n    \n        \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'MainBodyComponent', 'selector': 'app-main-body'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MainHeadComponent', 'selector': 'app-main-head'},{'name': 'MiddleContentComponent', 'selector': 'app-middle-content'},{'name': 'PanelComponent', 'selector': 'app-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PanelComponent.html":{"url":"components/PanelComponent.html","title":"component - PanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PanelComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/panel/panel.component.ts\n\n\n    \n        Description\n    \n    \n        The panel component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-panel\n            \n\n            \n                styleUrls\n                panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./panel.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                opened\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/panel/panel.component.ts:33\n                            \n                        \n\n                \n                    \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        opened\n                    \n                    \n                        The panel state.\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/panel/panel.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                        The panel title.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/panel/panel.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        The panel toggle handler.\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/panel/panel.component.ts:33\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * The panel component\n */\n@Component({\n  selector: 'app-panel',\n  templateUrl: './panel.component.html',\n  styleUrls: ['./panel.component.scss']\n})\n\n/**\n * @class PanelComponent\n */\nexport class PanelComponent {\n\n  /**\n   * The panel state.\n   * @typedef boolean\n   */\n  @Input() opened: boolean = false;\n\n  /**\n   * The panel title.\n   * @typedef string\n   */\n  @Input() title: string;\n\n  /**\n   * The panel toggle handler.\n   * @typedef EventEmitter\n   */\n  @Output() toggle: EventEmitter = new EventEmitter();\n\n  /**\n   * @constructor\n   */\n  constructor() { }\n\n}\n\n    \n\n    \n        \n  \n    {{title}}\n    -\n    +\n  \n  \n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{title}}    -    +                        '\n    var COMPONENTS = [{'name': 'AccordionComponent', 'selector': 'app-accordion'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'MainBodyComponent', 'selector': 'app-main-body'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'MainHeadComponent', 'selector': 'app-main-head'},{'name': 'MiddleContentComponent', 'selector': 'app-middle-content'},{'name': 'PanelComponent', 'selector': 'app-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Qbox.html":{"url":"classes/Qbox.html","title":"class - Qbox","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Qbox\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/qbox.ts\n        \n\n            \n                Description\n            \n            \n                Color model\n\n            \n\n\n            \n                Implements\n            \n            \n                        Deserializable\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                header\n                            \n                            \n                                id\n                            \n                            \n                                post\n                            \n                            \n                                rating\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, header: string, text: string, author: string, post: string, rating: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/qbox.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    id\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    header\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    text\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    author\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    post\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    rating\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        author:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/qbox.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            header\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        header:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/qbox.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/qbox.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        post:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/qbox.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rating\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rating:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/qbox.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        text:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/qbox.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deserialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deserialize(input: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/qbox.ts:39\n                            \n                        \n\n                \n                    \n                            Deserialize Qbox model\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Qbox\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Deserializable} from '../deserializable';\n\n/**\n * Color model\n * @class Qbox\n * @implements Deserializable\n */\nexport class Qbox implements Deserializable {\n  id: number;\n  header: string;\n  text: string;\n  author: string;\n  post: string;\n  rating: number;\n\n  /**\n   * @constructor\n   * @param {id} id\n   * @param {header} header\n   * @param {text} text\n   * @param {author} author\n   * @param {post} post\n   * @param {rating} rating\n   */\n  constructor(id: number, header: string, text: string, author: string, post: string, rating: number) {\n    this.id = id;\n    this.header = header;\n    this.text = text;\n    this.author = author;\n    this.post = post;\n    this.rating = rating;\n  }\n\n  /**\n   * Deserialize Qbox model\n   * @param {input} any\n   * @returns {this}\n   */\n  public deserialize(input: any): Qbox {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tech.html":{"url":"classes/Tech.html","title":"class - Tech","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tech\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tech.ts\n        \n\n            \n                Description\n            \n            \n                Tech model\n\n            \n\n\n            \n                Implements\n            \n            \n                        Deserializable\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                link\n                            \n                            \n                                mainText\n                            \n                            \n                                secondText\n                            \n                            \n                                thirdText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, link: string, mainText: TechOption, secondText: TechOption, thirdText: TechOption)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/tech.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    id\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    link\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    mainText\n                                                  \n                                                        \n                                                                    TechOption\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    secondText\n                                                  \n                                                        \n                                                                    TechOption\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    thirdText\n                                                  \n                                                        \n                                                                    TechOption\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tech.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        link:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tech.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mainText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mainText:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tech.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            secondText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        secondText:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tech.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thirdText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        thirdText:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tech.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deserialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deserialize(input: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/tech.ts:40\n                            \n                        \n\n                \n                    \n                            Deserialize Tech model\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Tech\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Deserializable} from '../deserializable';\nimport {TechOption} from '../tech-option';\n/**\n * Tech model\n * @class Tech\n * @implements Deserializable\n */\nexport class Tech implements Deserializable {\n  id: number;\n  link: string;\n  mainText: {animation: string, text: string};\n  secondText: {animation: string, text: string};\n  thirdText: {animation: string, text: string};\n\n  /**\n   * @constructor\n   * @param {id} id\n   * @param {link} link\n   * @param {mainText} mainText\n   * @param {secondText} secondText\n   * @param {thirdText} thirdText\n   */\n  constructor(id: number,\n    link: string,\n    mainText: TechOption,\n    secondText: TechOption,\n    thirdText: TechOption) {\n    this.id = id;\n    this.link = link;\n    this.mainText = mainText;\n    this.secondText = secondText;\n    this.thirdText = thirdText;\n  }\n\n  /**\n   * Deserialize Tech model\n   * @param {input} any\n   * @returns {this}\n   */\n  public deserialize(input: any): Tech {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TechOption.html":{"url":"interfaces/TechOption.html","title":"interface - TechOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TechOption\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tech-option.ts\n        \n\n            \n                Description\n            \n            \n                TechOption interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        animation\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animation\n                                    \n                                \n                                \n                                    \n                                        animation:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/tech-option.ts:6\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/tech-option.ts:7\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface TechOption {\n    animation: string;\n    text: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    e2e/app.po.ts\n            \n            \n                class\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/accordion/accordion.component.ts\n            \n            \n                component\n            \n            \n                AccordionComponent\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/deserializable.ts\n            \n            \n                interface\n            \n            \n                Deserializable\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/footer/footer.component.ts\n            \n            \n                component\n            \n            \n                FooterComponent\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    src/app/header/header.component.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                    src/app/main-body/main-body.component.ts\n            \n            \n                component\n            \n            \n                MainBodyComponent\n            \n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                    src/app/main-head/main-head.component.ts\n            \n            \n                component\n            \n            \n                MainHeadComponent\n            \n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                    src/app/main/main.component.ts\n            \n            \n                component\n            \n            \n                MainComponent\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    src/app/middle-content/middle-content.component.ts\n            \n            \n                component\n            \n            \n                MiddleContentComponent\n            \n            \n                48 %\n                (13/27)\n            \n        \n        \n            \n                \n                    src/app/models/accordion.ts\n            \n            \n                class\n            \n            \n                Accordion\n            \n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                    src/app/models/brand.ts\n            \n            \n                class\n            \n            \n                Brand\n            \n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                    src/app/models/color.ts\n            \n            \n                class\n            \n            \n                Color\n            \n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                    src/app/models/language.ts\n            \n            \n                class\n            \n            \n                Language\n            \n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                    src/app/models/qbox.ts\n            \n            \n                class\n            \n            \n                Qbox\n            \n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                    src/app/models/tech.ts\n            \n            \n                class\n            \n            \n                Tech\n            \n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                    src/app/panel/panel.component.ts\n            \n            \n                component\n            \n            \n                PanelComponent\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    src/app/pipes/image-filter.pipe.ts\n            \n            \n                pipe\n            \n            \n                ImageFilterPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/services/api.service.ts\n            \n            \n                injectable\n            \n            \n                ApiService\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/services/api.service.ts\n            \n            \n                variable\n            \n            \n                API_URL\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/services/language.service.ts\n            \n            \n                injectable\n            \n            \n                LanguageService\n            \n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                    src/app/tech-option.ts\n            \n            \n                interface\n            \n            \n                TechOption\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^5.2.0\n        \n            @angular/common : ^5.2.0\n        \n            @angular/compiler : ^5.2.0\n        \n            @angular/core : ^5.2.10\n        \n            @angular/forms : ^5.2.0\n        \n            @angular/http : ^5.2.0\n        \n            @angular/language-service : ^5.2.0\n        \n            @angular/platform-browser : ^5.2.0\n        \n            @angular/platform-browser-dynamic : ^5.2.0\n        \n            @angular/router : ^5.2.0\n        \n            @ng-select/ng-select : ^0.30.1\n        \n            @thisissoon/angular-inviewport : ^2.2.0\n        \n            angular-inport : ^1.0.3\n        \n            angular2-viewport : ^1.4.3\n        \n            angular4-carousel : ^3.1.8\n        \n            animate.css : ^3.6.1\n        \n            body-parser : ^1.18.2\n        \n            bootstrap : ^4.1.1\n        \n            cookie-parser : ^1.4.3\n        \n            core-js : ^2.4.1\n        \n            express : ^4.16.3\n        \n            intersection-observer : ^0.5.0\n        \n            morgan : ^1.9.0\n        \n            ng-in-viewport : ^1.2.0\n        \n            ngx-scroll-event : ^1.0.8\n        \n            ngx-slick : ^0.1.3\n        \n            rxjs : ^5.5.6\n        \n            serve-favicon : ^2.5.0\n        \n            ts-node : ~4.1.0\n        \n            tslint : ~5.9.1\n        \n            typedoc : ^0.11.1\n        \n            typescript : ~2.5.3\n        \n            ui-carousel : ^0.2.0\n        \n            zone.js : ^0.8.19\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nKlanding\nThis project was generated with Angular CLI version 1.7.3.\nTools\n\nBootstrap 4\nAngular 5\nAnimate.css (https://daneden.github.io/animate.css/)\nExpress\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nRunning in production\nRun npm run prod to build app and then serve by express. Then navigate to localhost:3000\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nDist folder size ~1.3mb\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nMainHeadComponent\n\nMainHeadComponent\n\nAppModule -->\n\nMainHeadComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nMainBodyComponent\n\nMainBodyComponent\n\nAppModule -->\n\nMainBodyComponent->AppModule\n\n\n\n\n\nMiddleContentComponent\n\nMiddleContentComponent\n\nAppModule -->\n\nMiddleContentComponent->AppModule\n\n\n\n\n\nImageFilterPipe\n\nImageFilterPipe\n\nAppModule -->\n\nImageFilterPipe->AppModule\n\n\n\n\n\nPanelComponent\n\nPanelComponent\n\nAppModule -->\n\nPanelComponent->AppModule\n\n\n\n\n\nAccordionComponent\n\nAccordionComponent\n\nAppModule -->\n\nAccordionComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nLanguageService\n\nLanguageService\n\nAppModule -->\n\nLanguageService->AppModule\n\n\n\n\n\nApiService\n\nApiService\n\nAppModule -->\n\nApiService->AppModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        9 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_URL   (src/.../api.service.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/api.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_URL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        API_URL:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl\n                        \n                    \n\n                \n                    \n                        Api endpoint\n\n                    \n                \n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  apiUrl: 'http://localhost:3000'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  apiUrl: 'http://localhost:4200'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
